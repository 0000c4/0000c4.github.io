{"ast":null,"code":"import{makeAutoObservable}from'mobx';import AuthService from'../services/auth-service';import noteService from'../services/note-service';import localdb from'../local_db/localdb';export default class Store{constructor(){//auth data\nthis.user={};this.isAuth=false;//notes data\nthis.notes=[];this.searchedNotes=[];makeAutoObservable(this);}setAuth(auth){this.isAuth=auth;}setUser(user){this.user=user;}setNotes(notes){this.notes=notes;}setSearchedNotes(notes){this.searchedNotes=notes;}async login(email,password){try{const response=await AuthService.login(email,password);console.log(response);localStorage.setItem('token',response.accessToken);this.setAuth(true);this.setUser(response.user);this.getNotes();}catch(error){return error.response.data;}}async registration(email,password,name){try{const response=await AuthService.registration(email,password,name);console.log(response);localStorage.setItem('token',response.accessToken);this.setAuth(true);this.setUser(response.user);}catch(error){return error.response.data;}}async logout(){try{console.log('logout');await AuthService.logout();localStorage.removeItem('token');this.setAuth(false);this.setUser({});}catch(error){console.log(error);}}async checkAuth(){try{await this.syncWithServer();const response=await AuthService.checkAuth();localStorage.setItem('token',response.accessToken);this.setAuth(true);this.setUser(response.user);}catch(error){}}async sendResetPasswordEmail(email){try{const response=await AuthService.sendResetPasswordEmail(email);console.log(response);}catch(error){return error.response.data;}}//notes\nasync getNotes(){let LocalNotes=await localdb.getAll();this.setNotes(LocalNotes.filter(note=>note.status!=='delete'));console.log(LocalNotes);noteService.get().then(async res=>{//если сервер доступен проверяем нет ли новых заметок от сервера, если есть добавляем в бд и обновляем ьассив\nif(res.status==200){console.log('ну и где блять');res.data.forEach(async serverNote=>{//проходимся по каждой заметки из сервера и проверяем по _id есть ли она в локальной бд\nconst isSynced=LocalNotes.find(element=>element._id==serverNote._id);if(isSynced==undefined)await localdb.put({...serverNote,status:'sync'});});LocalNotes=await localdb.getAll();this.setNotes(LocalNotes.filter(note=>note.status!=='delete'));}});}async editNote(note,sync){try{//пофиксить изменение несинхронизированных заметок\nawait localdb.put({...note,status:'edit'});//сначала изменяем заметку в локалбд и стейте, если сервер доступен синхронизируемся с ним\nthis.setNotes(this.notes.map(elem=>elem._id==note._id?elem=note:elem));noteService.edit(note).then(res=>{if(res.status==200){localdb.put({...res.data,status:'sync'});}});}catch(error){console.log(error);}finally{}}async AddNote(note,sync){try{// setIsSync(true)\nconst localNote={...note,status:'new',_id:new Date()};//сначала создаем заметку в бд\nawait localdb.put(localNote);this.setNotes([...this.notes,localNote]);noteService.add(note).then(res=>{//если сервер доступен удаляем заметку из notes и меняем ее на валидную\nif(res.status==200){const syncNote=res.data;const notes=this.notes.filter(e=>e._id!==localNote._id);localdb.delete(localNote._id);localdb.put({...syncNote,status:'sync'});this.setNotes([...notes,syncNote]);}});}catch(error){console.log(error);}finally{//setIsSync(false)\n}}async RemoveNote(note,sync){try{await localdb.put({...note,status:'delete'});//сначала меняем status заметки на delete\nconst notes=this.notes.filter(e=>e._id!==note._id);noteService.delete(note).then(res=>{//если сервер доступен удаляем заметку из localdb\nif(res.status==200){localdb.delete(note._id);}});this.setNotes(notes);}catch(error){}}async syncWithServer(){//блять я ни черта не понимаю ебучий индекседб какой же говнокод нахуй\nlet transactions=[];//хранит массив операций для дальнейшего выполнения всего в одной транзакции\nnoteService.get().then(async res=>{//если сервер доступен синхронизируем локалбд и сервер\nif(res.status==200){const localNotes=await localdb.getAll();//получаем заметки из локалдб и проверяем их статус синхронизации\nlocalNotes.forEach(async note=>{console.log(note.status);if(note.status=='edit'){const SyncedEdit=await noteService.edit(note);if(SyncedEdit.status==200){console.log('work blyat syka');await localdb.put({...SyncedEdit.data,status:'sync'});}}else if(note.status=='new'){const SyncedNew=await noteService.add(note);if(SyncedNew.status==200){await localdb.delete(note._id);await localdb.put({...SyncedNew.data,status:'sync'});}}else if(note.status=='delete'){const SyncedDelete=await noteService.delete(note);if(SyncedDelete.status==200){console.log('its work');await localdb.delete(note._id);}}});}});}NoteSearch(search){const notes=this.notes.filter(note=>note.title.toLowerCase().includes(search.toLowerCase())).concat(this.notes.filter(note=>note.body.toLowerCase().includes(search.toLowerCase())));this.setSearchedNotes(notes);}}","map":{"version":3,"names":["makeAutoObservable","AuthService","noteService","localdb","Store","constructor","user","isAuth","notes","searchedNotes","setAuth","auth","setUser","setNotes","setSearchedNotes","login","email","password","response","console","log","localStorage","setItem","accessToken","getNotes","error","data","registration","name","logout","removeItem","checkAuth","syncWithServer","sendResetPasswordEmail","LocalNotes","getAll","filter","note","status","get","then","res","forEach","serverNote","isSynced","find","element","_id","undefined","put","editNote","sync","map","elem","edit","AddNote","localNote","Date","add","syncNote","e","delete","RemoveNote","transactions","localNotes","SyncedEdit","SyncedNew","SyncedDelete","NoteSearch","search","title","toLowerCase","includes","concat","body"],"sources":["C:/Users/vasja/coding/notes_pwa/src/store/Store.js"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\r\nimport AuthService from '../services/auth-service';\r\nimport noteService from '../services/note-service';\r\nimport localdb from '../local_db/localdb';\r\nexport default class Store {\r\n    //auth data\r\n    user = {};\r\n    isAuth = false;\r\n\r\n    //notes data\r\n    notes = [];\r\n    searchedNotes = [];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setAuth(auth) {\r\n        this.isAuth = auth;\r\n    }\r\n    setUser(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    setNotes(notes) {\r\n        this.notes = notes;\r\n    }\r\n    setSearchedNotes(notes) {\r\n        this.searchedNotes = notes;\r\n    }\r\n\r\n    async login(email, password) {\r\n        try {\r\n            const response = await AuthService.login(email, password);\r\n            console.log(response);\r\n            localStorage.setItem('token', response.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.user)\r\n            this.getNotes();\r\n\r\n        } catch (error) {\r\n            return error.response.data;\r\n        }\r\n    }\r\n\r\n    async registration(email, password, name) {\r\n        try {\r\n            const response = await AuthService.registration(email, password, name);\r\n            console.log(response);\r\n            localStorage.setItem('token', response.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.user);\r\n        } catch (error) {\r\n            return error.response.data;\r\n        }\r\n    }\r\n    async logout() {\r\n        try {\r\n            console.log('logout')\r\n            await AuthService.logout();\r\n            localStorage.removeItem('token')\r\n            this.setAuth(false);\r\n            this.setUser({});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    async checkAuth() {\r\n        try {\r\n            await this.syncWithServer()\r\n            const response = await AuthService.checkAuth();\r\n            localStorage.setItem('token', response.accessToken)\r\n            this.setAuth(true);\r\n            this.setUser(response.user)\r\n\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    async sendResetPasswordEmail(email) {\r\n        try {\r\n            const response = await AuthService.sendResetPasswordEmail(email);\r\n            console.log(response)\r\n        } catch (error) {\r\n            return error.response.data;\r\n        }\r\n    }\r\n\r\n    //notes\r\n    async getNotes() {\r\n        let LocalNotes = await localdb.getAll()\r\n        this.setNotes(LocalNotes.filter(note => note.status !== 'delete'));\r\n        console.log(LocalNotes)\r\n        noteService.get().then(async res => { //если сервер доступен проверяем нет ли новых заметок от сервера, если есть добавляем в бд и обновляем ьассив\r\n            if (res.status == 200) {\r\n                console.log('ну и где блять')\r\n                res.data.forEach(async serverNote => { //проходимся по каждой заметки из сервера и проверяем по _id есть ли она в локальной бд\r\n                    const isSynced = LocalNotes.find(element => element._id == serverNote._id)\r\n                    if (isSynced == undefined) await localdb.put({ ...serverNote, status: 'sync' })\r\n                    \r\n                });\r\n                LocalNotes = await localdb.getAll()\r\n                this.setNotes(LocalNotes.filter(note => note.status !== 'delete'));\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n    async editNote(note, sync) {\r\n        try {\r\n            //пофиксить изменение несинхронизированных заметок\r\n            await localdb.put({ ...note, status: 'edit' })//сначала изменяем заметку в локалбд и стейте, если сервер доступен синхронизируемся с ним\r\n            this.setNotes(this.notes.map(elem => elem._id == note._id ? elem = note : elem))\r\n            noteService.edit(note).then(res => {\r\n                if (res.status == 200) {\r\n                    localdb.put({ ...res.data, status: 'sync' })\r\n                }\r\n            })\r\n\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n        }\r\n\r\n\r\n    }\r\n    async AddNote(note, sync) {\r\n        try {\r\n            // setIsSync(true)\r\n            const localNote = { ...note, status: 'new', _id: new Date() } //сначала создаем заметку в бд\r\n            await localdb.put(localNote)\r\n            this.setNotes([...this.notes, localNote])\r\n            noteService.add(note).then(res => { //если сервер доступен удаляем заметку из notes и меняем ее на валидную\r\n                if (res.status == 200) {\r\n                    const syncNote = res.data;\r\n                    const notes = this.notes.filter(e => e._id !== localNote._id)\r\n                    localdb.delete(localNote._id)\r\n                    localdb.put({ ...syncNote, status: 'sync' })\r\n                    this.setNotes([...notes, syncNote])\r\n                }\r\n            })\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            //setIsSync(false)\r\n        }\r\n\r\n    }\r\n    async RemoveNote(note, sync) {\r\n        try {\r\n            await localdb.put({ ...note, status: 'delete' })//сначала меняем status заметки на delete\r\n            const notes = this.notes.filter(e => e._id !== note._id)\r\n            noteService.delete(note).then(res => { //если сервер доступен удаляем заметку из localdb\r\n                if (res.status == 200) {\r\n                    localdb.delete(note._id)\r\n                }\r\n            })\r\n\r\n            this.setNotes(notes)\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    async syncWithServer() {\r\n        //блять я ни черта не понимаю ебучий индекседб какой же говнокод нахуй\r\n        let transactions = []; //хранит массив операций для дальнейшего выполнения всего в одной транзакции\r\n        noteService.get().then(async res => { //если сервер доступен синхронизируем локалбд и сервер\r\n            if (res.status == 200) {\r\n                const localNotes = await localdb.getAll();//получаем заметки из локалдб и проверяем их статус синхронизации\r\n                localNotes.forEach(async note => {\r\n                    console.log(note.status)\r\n                    if (note.status == 'edit') {\r\n                        const SyncedEdit = await noteService.edit(note)\r\n                        if (SyncedEdit.status == 200) {\r\n                            console.log('work blyat syka')\r\n                            await localdb.put({ ...SyncedEdit.data, status: 'sync' })\r\n                        }\r\n                    }\r\n                    else if (note.status == 'new') {\r\n                        const SyncedNew = await noteService.add(note)\r\n                        if (SyncedNew.status == 200) {\r\n\r\n                            await localdb.delete(note._id)\r\n                            await localdb.put({ ...SyncedNew.data, status: 'sync' })\r\n                        }\r\n                    }\r\n                    else if (note.status == 'delete') {\r\n\r\n                        const SyncedDelete = await noteService.delete(note)\r\n                        if (SyncedDelete.status == 200) {\r\n                            console.log('its work')\r\n                            await localdb.delete(note._id)\r\n                        }\r\n                    }\r\n\r\n                })\r\n            }\r\n\r\n        })\r\n    }\r\n    NoteSearch(search) {\r\n        const notes = this.notes.filter(note => note.title.toLowerCase().includes(search.toLowerCase()))\r\n            .concat(this.notes.filter(note => note.body.toLowerCase().includes(search.toLowerCase())))\r\n        this.setSearchedNotes(notes);\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAASA,kBAAkB,KAAQ,MAAM,CACzC,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,WAAW,KAAM,0BAA0B,CAClD,MAAO,CAAAC,OAAO,KAAM,qBAAqB,CACzC,cAAe,MAAM,CAAAC,KAAM,CASvBC,WAAWA,CAAA,CAAG,CARd;AAAA,KACAC,IAAI,CAAG,CAAC,CAAC,MACTC,MAAM,CAAG,KAAK,CAEd;AAAA,KACAC,KAAK,CAAG,EAAE,MACVC,aAAa,CAAG,EAAE,CAGdT,kBAAkB,CAAC,IAAI,CAAC,CAC5B,CAEAU,OAAOA,CAACC,IAAI,CAAE,CACV,IAAI,CAACJ,MAAM,CAAGI,IAAI,CACtB,CACAC,OAAOA,CAACN,IAAI,CAAE,CACV,IAAI,CAACA,IAAI,CAAGA,IAAI,CACpB,CAEAO,QAAQA,CAACL,KAAK,CAAE,CACZ,IAAI,CAACA,KAAK,CAAGA,KAAK,CACtB,CACAM,gBAAgBA,CAACN,KAAK,CAAE,CACpB,IAAI,CAACC,aAAa,CAAGD,KAAK,CAC9B,CAEA,KAAM,CAAAO,KAAKA,CAACC,KAAK,CAAEC,QAAQ,CAAE,CACzB,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAjB,WAAW,CAACc,KAAK,CAACC,KAAK,CAAEC,QAAQ,CAAC,CACzDE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACrBG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEJ,QAAQ,CAACK,WAAW,CAAC,CACnD,IAAI,CAACb,OAAO,CAAC,IAAI,CAAC,CAClB,IAAI,CAACE,OAAO,CAACM,QAAQ,CAACZ,IAAI,CAAC,CAC3B,IAAI,CAACkB,QAAQ,CAAC,CAAC,CAEnB,CAAE,MAAOC,KAAK,CAAE,CACZ,MAAO,CAAAA,KAAK,CAACP,QAAQ,CAACQ,IAAI,CAC9B,CACJ,CAEA,KAAM,CAAAC,YAAYA,CAACX,KAAK,CAAEC,QAAQ,CAAEW,IAAI,CAAE,CACtC,GAAI,CACA,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAjB,WAAW,CAAC0B,YAAY,CAACX,KAAK,CAAEC,QAAQ,CAAEW,IAAI,CAAC,CACtET,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACrBG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEJ,QAAQ,CAACK,WAAW,CAAC,CACnD,IAAI,CAACb,OAAO,CAAC,IAAI,CAAC,CAClB,IAAI,CAACE,OAAO,CAACM,QAAQ,CAACZ,IAAI,CAAC,CAC/B,CAAE,MAAOmB,KAAK,CAAE,CACZ,MAAO,CAAAA,KAAK,CAACP,QAAQ,CAACQ,IAAI,CAC9B,CACJ,CACA,KAAM,CAAAG,MAAMA,CAAA,CAAG,CACX,GAAI,CACAV,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC,CACrB,KAAM,CAAAnB,WAAW,CAAC4B,MAAM,CAAC,CAAC,CAC1BR,YAAY,CAACS,UAAU,CAAC,OAAO,CAAC,CAChC,IAAI,CAACpB,OAAO,CAAC,KAAK,CAAC,CACnB,IAAI,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CACpB,CAAE,MAAOa,KAAK,CAAE,CACZN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC,CACtB,CACJ,CACA,KAAM,CAAAM,SAASA,CAAA,CAAG,CACd,GAAI,CACA,KAAM,KAAI,CAACC,cAAc,CAAC,CAAC,CAC3B,KAAM,CAAAd,QAAQ,CAAG,KAAM,CAAAjB,WAAW,CAAC8B,SAAS,CAAC,CAAC,CAC9CV,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEJ,QAAQ,CAACK,WAAW,CAAC,CACnD,IAAI,CAACb,OAAO,CAAC,IAAI,CAAC,CAClB,IAAI,CAACE,OAAO,CAACM,QAAQ,CAACZ,IAAI,CAAC,CAE/B,CAAE,MAAOmB,KAAK,CAAE,CAEhB,CACJ,CAEA,KAAM,CAAAQ,sBAAsBA,CAACjB,KAAK,CAAE,CAChC,GAAI,CACA,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAAjB,WAAW,CAACgC,sBAAsB,CAACjB,KAAK,CAAC,CAChEG,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CACzB,CAAE,MAAOO,KAAK,CAAE,CACZ,MAAO,CAAAA,KAAK,CAACP,QAAQ,CAACQ,IAAI,CAC9B,CACJ,CAEA;AACA,KAAM,CAAAF,QAAQA,CAAA,CAAG,CACb,GAAI,CAAAU,UAAU,CAAG,KAAM,CAAA/B,OAAO,CAACgC,MAAM,CAAC,CAAC,CACvC,IAAI,CAACtB,QAAQ,CAACqB,UAAU,CAACE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,MAAM,GAAK,QAAQ,CAAC,CAAC,CAClEnB,OAAO,CAACC,GAAG,CAACc,UAAU,CAAC,CACvBhC,WAAW,CAACqC,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC,KAAM,CAAAC,GAAG,EAAI,CAAE;AAClC,GAAIA,GAAG,CAACH,MAAM,EAAI,GAAG,CAAE,CACnBnB,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC,CAC7BqB,GAAG,CAACf,IAAI,CAACgB,OAAO,CAAC,KAAM,CAAAC,UAAU,EAAI,CAAE;AACnC,KAAM,CAAAC,QAAQ,CAAGV,UAAU,CAACW,IAAI,CAACC,OAAO,EAAIA,OAAO,CAACC,GAAG,EAAIJ,UAAU,CAACI,GAAG,CAAC,CAC1E,GAAIH,QAAQ,EAAII,SAAS,CAAE,KAAM,CAAA7C,OAAO,CAAC8C,GAAG,CAAC,CAAE,GAAGN,UAAU,CAAEL,MAAM,CAAE,MAAO,CAAC,CAAC,CAEnF,CAAC,CAAC,CACFJ,UAAU,CAAG,KAAM,CAAA/B,OAAO,CAACgC,MAAM,CAAC,CAAC,CACnC,IAAI,CAACtB,QAAQ,CAACqB,UAAU,CAACE,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACC,MAAM,GAAK,QAAQ,CAAC,CAAC,CACtE,CAEJ,CAAC,CAAC,CAGN,CACA,KAAM,CAAAY,QAAQA,CAACb,IAAI,CAAEc,IAAI,CAAE,CACvB,GAAI,CACA;AACA,KAAM,CAAAhD,OAAO,CAAC8C,GAAG,CAAC,CAAE,GAAGZ,IAAI,CAAEC,MAAM,CAAE,MAAO,CAAC,CAAC;AAC9C,IAAI,CAACzB,QAAQ,CAAC,IAAI,CAACL,KAAK,CAAC4C,GAAG,CAACC,IAAI,EAAIA,IAAI,CAACN,GAAG,EAAIV,IAAI,CAACU,GAAG,CAAGM,IAAI,CAAGhB,IAAI,CAAGgB,IAAI,CAAC,CAAC,CAChFnD,WAAW,CAACoD,IAAI,CAACjB,IAAI,CAAC,CAACG,IAAI,CAACC,GAAG,EAAI,CAC/B,GAAIA,GAAG,CAACH,MAAM,EAAI,GAAG,CAAE,CACnBnC,OAAO,CAAC8C,GAAG,CAAC,CAAE,GAAGR,GAAG,CAACf,IAAI,CAAEY,MAAM,CAAE,MAAO,CAAC,CAAC,CAChD,CACJ,CAAC,CAAC,CAIN,CAAE,MAAOb,KAAK,CAAE,CACZN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC,CACtB,CAAC,OACO,CACR,CAGJ,CACA,KAAM,CAAA8B,OAAOA,CAAClB,IAAI,CAAEc,IAAI,CAAE,CACtB,GAAI,CACA;AACA,KAAM,CAAAK,SAAS,CAAG,CAAE,GAAGnB,IAAI,CAAEC,MAAM,CAAE,KAAK,CAAES,GAAG,CAAE,GAAI,CAAAU,IAAI,CAAC,CAAE,CAAC,CAAC;AAC9D,KAAM,CAAAtD,OAAO,CAAC8C,GAAG,CAACO,SAAS,CAAC,CAC5B,IAAI,CAAC3C,QAAQ,CAAC,CAAC,GAAG,IAAI,CAACL,KAAK,CAAEgD,SAAS,CAAC,CAAC,CACzCtD,WAAW,CAACwD,GAAG,CAACrB,IAAI,CAAC,CAACG,IAAI,CAACC,GAAG,EAAI,CAAE;AAChC,GAAIA,GAAG,CAACH,MAAM,EAAI,GAAG,CAAE,CACnB,KAAM,CAAAqB,QAAQ,CAAGlB,GAAG,CAACf,IAAI,CACzB,KAAM,CAAAlB,KAAK,CAAG,IAAI,CAACA,KAAK,CAAC4B,MAAM,CAACwB,CAAC,EAAIA,CAAC,CAACb,GAAG,GAAKS,SAAS,CAACT,GAAG,CAAC,CAC7D5C,OAAO,CAAC0D,MAAM,CAACL,SAAS,CAACT,GAAG,CAAC,CAC7B5C,OAAO,CAAC8C,GAAG,CAAC,CAAE,GAAGU,QAAQ,CAAErB,MAAM,CAAE,MAAO,CAAC,CAAC,CAC5C,IAAI,CAACzB,QAAQ,CAAC,CAAC,GAAGL,KAAK,CAAEmD,QAAQ,CAAC,CAAC,CACvC,CACJ,CAAC,CAAC,CAEN,CAAE,MAAOlC,KAAK,CAAE,CACZN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC,CACtB,CAAC,OACO,CACJ;AAAA,CAGR,CACA,KAAM,CAAAqC,UAAUA,CAACzB,IAAI,CAAEc,IAAI,CAAE,CACzB,GAAI,CACA,KAAM,CAAAhD,OAAO,CAAC8C,GAAG,CAAC,CAAE,GAAGZ,IAAI,CAAEC,MAAM,CAAE,QAAS,CAAC,CAAC;AAChD,KAAM,CAAA9B,KAAK,CAAG,IAAI,CAACA,KAAK,CAAC4B,MAAM,CAACwB,CAAC,EAAIA,CAAC,CAACb,GAAG,GAAKV,IAAI,CAACU,GAAG,CAAC,CACxD7C,WAAW,CAAC2D,MAAM,CAACxB,IAAI,CAAC,CAACG,IAAI,CAACC,GAAG,EAAI,CAAE;AACnC,GAAIA,GAAG,CAACH,MAAM,EAAI,GAAG,CAAE,CACnBnC,OAAO,CAAC0D,MAAM,CAACxB,IAAI,CAACU,GAAG,CAAC,CAC5B,CACJ,CAAC,CAAC,CAEF,IAAI,CAAClC,QAAQ,CAACL,KAAK,CAAC,CACxB,CAAE,MAAOiB,KAAK,CAAE,CAEhB,CACJ,CACA,KAAM,CAAAO,cAAcA,CAAA,CAAG,CACnB;AACA,GAAI,CAAA+B,YAAY,CAAG,EAAE,CAAE;AACvB7D,WAAW,CAACqC,GAAG,CAAC,CAAC,CAACC,IAAI,CAAC,KAAM,CAAAC,GAAG,EAAI,CAAE;AAClC,GAAIA,GAAG,CAACH,MAAM,EAAI,GAAG,CAAE,CACnB,KAAM,CAAA0B,UAAU,CAAG,KAAM,CAAA7D,OAAO,CAACgC,MAAM,CAAC,CAAC,CAAC;AAC1C6B,UAAU,CAACtB,OAAO,CAAC,KAAM,CAAAL,IAAI,EAAI,CAC7BlB,OAAO,CAACC,GAAG,CAACiB,IAAI,CAACC,MAAM,CAAC,CACxB,GAAID,IAAI,CAACC,MAAM,EAAI,MAAM,CAAE,CACvB,KAAM,CAAA2B,UAAU,CAAG,KAAM,CAAA/D,WAAW,CAACoD,IAAI,CAACjB,IAAI,CAAC,CAC/C,GAAI4B,UAAU,CAAC3B,MAAM,EAAI,GAAG,CAAE,CAC1BnB,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAC9B,KAAM,CAAAjB,OAAO,CAAC8C,GAAG,CAAC,CAAE,GAAGgB,UAAU,CAACvC,IAAI,CAAEY,MAAM,CAAE,MAAO,CAAC,CAAC,CAC7D,CACJ,CAAC,IACI,IAAID,IAAI,CAACC,MAAM,EAAI,KAAK,CAAE,CAC3B,KAAM,CAAA4B,SAAS,CAAG,KAAM,CAAAhE,WAAW,CAACwD,GAAG,CAACrB,IAAI,CAAC,CAC7C,GAAI6B,SAAS,CAAC5B,MAAM,EAAI,GAAG,CAAE,CAEzB,KAAM,CAAAnC,OAAO,CAAC0D,MAAM,CAACxB,IAAI,CAACU,GAAG,CAAC,CAC9B,KAAM,CAAA5C,OAAO,CAAC8C,GAAG,CAAC,CAAE,GAAGiB,SAAS,CAACxC,IAAI,CAAEY,MAAM,CAAE,MAAO,CAAC,CAAC,CAC5D,CACJ,CAAC,IACI,IAAID,IAAI,CAACC,MAAM,EAAI,QAAQ,CAAE,CAE9B,KAAM,CAAA6B,YAAY,CAAG,KAAM,CAAAjE,WAAW,CAAC2D,MAAM,CAACxB,IAAI,CAAC,CACnD,GAAI8B,YAAY,CAAC7B,MAAM,EAAI,GAAG,CAAE,CAC5BnB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC,CACvB,KAAM,CAAAjB,OAAO,CAAC0D,MAAM,CAACxB,IAAI,CAACU,GAAG,CAAC,CAClC,CACJ,CAEJ,CAAC,CAAC,CACN,CAEJ,CAAC,CAAC,CACN,CACAqB,UAAUA,CAACC,MAAM,CAAE,CACf,KAAM,CAAA7D,KAAK,CAAG,IAAI,CAACA,KAAK,CAAC4B,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACiC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACH,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,CAC3FE,MAAM,CAAC,IAAI,CAACjE,KAAK,CAAC4B,MAAM,CAACC,IAAI,EAAIA,IAAI,CAACqC,IAAI,CAACH,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACH,MAAM,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAC9F,IAAI,CAACzD,gBAAgB,CAACN,KAAK,CAAC,CAChC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}