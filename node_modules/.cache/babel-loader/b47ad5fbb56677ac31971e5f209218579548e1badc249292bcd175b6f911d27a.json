{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vasja\\\\coding\\\\notes_pwa\\\\src\\\\components\\\\NoteViewer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport styles from './NoteViewer.module.css';\nimport ContentEditable from 'react-contenteditable';\nimport Modal from '../UI/Modal/Modal';\nimport Back from '../UI/Buttons/Back/Back';\nimport Remove from '../UI/Buttons/Remove/Remove';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NoteViewer({\n  note,\n  isActive,\n  setActive,\n  callback,\n  removeCallback\n}) {\n  _s();\n  const [editingNote, setEditingNote] = useState(note); //эта переменная нужна для временного изменения. финальная запись будет при закрытии.\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isActive: isActive,\n    onClick: () => {\n      callback(editingNote);\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.viewer,\n      children: [/*#__PURE__*/_jsxDEV(ContentEditable, {\n        spellCheck: false,\n        className: styles.viewer__title,\n        html: editingNote.title // innerHTML of the editable div\n        ,\n        onChange: evt => {\n          editingNote = {\n            ...editingNote,\n            title: evt.target.value\n          };\n        } // handle innerHTML change\n        ,\n        onFocus: () => {\n          if (editingNote.title == 'Title...') {\n            var _editingNote;\n            console.log((_editingNote = editingNote) === null || _editingNote === void 0 ? void 0 : _editingNote._id);\n            editingNote = {\n              ...editingNote,\n              title: ''\n            };\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ContentEditable, {\n        spellCheck: false,\n        className: styles.viewer__body,\n        html: editingNote.body // innerHTML of the editable div\n        ,\n        onChange: evt => {\n          editingNote = {\n            ...editingNote,\n            body: evt.target.value\n          };\n        } // handle innerHTML change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.viewer__bar,\n        children: [/*#__PURE__*/_jsxDEV(Back, {\n          onClick: () => {\n            setActive(false);\n            callback(editingNote);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Remove, {\n          onClick: () => {\n            setActive(false);\n            removeCallback(editingNote);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\n_s(NoteViewer, \"4FxDRf8gzm5O9AunHOpTjW569U8=\");\n_c = NoteViewer;\nexport default NoteViewer;\nvar _c;\n$RefreshReg$(_c, \"NoteViewer\");","map":{"version":3,"names":["React","useState","styles","ContentEditable","Modal","Back","Remove","jsxDEV","_jsxDEV","NoteViewer","note","isActive","setActive","callback","removeCallback","_s","editingNote","setEditingNote","onClick","children","className","viewer","spellCheck","viewer__title","html","title","onChange","evt","target","value","onFocus","_editingNote","console","log","_id","fileName","_jsxFileName","lineNumber","columnNumber","viewer__body","body","viewer__bar","_c","$RefreshReg$"],"sources":["C:/Users/vasja/coding/notes_pwa/src/components/NoteViewer.jsx"],"sourcesContent":["import React,{useState} from 'react';\r\nimport styles from './NoteViewer.module.css'\r\nimport ContentEditable from 'react-contenteditable'\r\nimport Modal from '../UI/Modal/Modal';\r\nimport Back from '../UI/Buttons/Back/Back';\r\nimport Remove from '../UI/Buttons/Remove/Remove';\r\nfunction NoteViewer({ note, isActive, setActive, callback, removeCallback}) {\r\n    const [editingNote,setEditingNote] = useState(note); //эта переменная нужна для временного изменения. финальная запись будет при закрытии.\r\n\r\n    return (\r\n        <Modal isActive={isActive} onClick={()=>{callback(editingNote)}}>\r\n            <div className={styles.viewer}>\r\n                <ContentEditable\r\n                    spellCheck={false}\r\n                    className={styles.viewer__title}\r\n                    html={editingNote.title} // innerHTML of the editable div\r\n                    onChange={evt => { editingNote = {...editingNote, title: evt.target.value};}} // handle innerHTML change\r\n                    onFocus={()=>{\r\n\r\n                        if(editingNote.title == 'Title...'){\r\n                            console.log(editingNote?._id)\r\n                            editingNote = {...editingNote, title: ''};\r\n                        }\r\n                    }}\r\n                />\r\n                <ContentEditable\r\n                    spellCheck={false}\r\n                    className={styles.viewer__body}\r\n                    html={editingNote.body} // innerHTML of the editable div\r\n                    onChange={evt => { editingNote = {...editingNote, body: evt.target.value};}} // handle innerHTML change\r\n                />\r\n                <div className={styles.viewer__bar}>\r\n                    <Back onClick={()=>{setActive(false);callback(editingNote)}}/>\r\n                    <Remove onClick={()=>{setActive(false);removeCallback(editingNote);}}></Remove>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default NoteViewer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;AACpC,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,OAAOC,eAAe,MAAM,uBAAuB;AACnD,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACjD,SAASC,UAAUA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAEC,SAAS;EAAEC,QAAQ;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACxE,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGhB,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC;;EAErD,oBACIF,OAAA,CAACJ,KAAK;IAACO,QAAQ,EAAEA,QAAS;IAACO,OAAO,EAAEA,CAAA,KAAI;MAACL,QAAQ,CAACG,WAAW,CAAC;IAAA,CAAE;IAAAG,QAAA,eAC5DX,OAAA;MAAKY,SAAS,EAAElB,MAAM,CAACmB,MAAO;MAAAF,QAAA,gBAC1BX,OAAA,CAACL,eAAe;QACZmB,UAAU,EAAE,KAAM;QAClBF,SAAS,EAAElB,MAAM,CAACqB,aAAc;QAChCC,IAAI,EAAER,WAAW,CAACS,KAAM,CAAC;QAAA;QACzBC,QAAQ,EAAEC,GAAG,IAAI;UAAEX,WAAW,GAAG;YAAC,GAAGA,WAAW;YAAES,KAAK,EAAEE,GAAG,CAACC,MAAM,CAACC;UAAK,CAAC;QAAC,CAAE,CAAC;QAAA;QAC9EC,OAAO,EAAEA,CAAA,KAAI;UAET,IAAGd,WAAW,CAACS,KAAK,IAAI,UAAU,EAAC;YAAA,IAAAM,YAAA;YAC/BC,OAAO,CAACC,GAAG,EAAAF,YAAA,GAACf,WAAW,cAAAe,YAAA,uBAAXA,YAAA,CAAaG,GAAG,CAAC;YAC7BlB,WAAW,GAAG;cAAC,GAAGA,WAAW;cAAES,KAAK,EAAE;YAAE,CAAC;UAC7C;QACJ;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACF9B,OAAA,CAACL,eAAe;QACZmB,UAAU,EAAE,KAAM;QAClBF,SAAS,EAAElB,MAAM,CAACqC,YAAa;QAC/Bf,IAAI,EAAER,WAAW,CAACwB,IAAK,CAAC;QAAA;QACxBd,QAAQ,EAAEC,GAAG,IAAI;UAAEX,WAAW,GAAG;YAAC,GAAGA,WAAW;YAAEwB,IAAI,EAAEb,GAAG,CAACC,MAAM,CAACC;UAAK,CAAC;QAAC,CAAE,CAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChF,CAAC,eACF9B,OAAA;QAAKY,SAAS,EAAElB,MAAM,CAACuC,WAAY;QAAAtB,QAAA,gBAC/BX,OAAA,CAACH,IAAI;UAACa,OAAO,EAAEA,CAAA,KAAI;YAACN,SAAS,CAAC,KAAK,CAAC;YAACC,QAAQ,CAACG,WAAW,CAAC;UAAA;QAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC9D9B,OAAA,CAACF,MAAM;UAACY,OAAO,EAAEA,CAAA,KAAI;YAACN,SAAS,CAAC,KAAK,CAAC;YAACE,cAAc,CAACE,WAAW,CAAC;UAAC;QAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9E,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEhB;AAACvB,EAAA,CAhCQN,UAAU;AAAAiC,EAAA,GAAVjC,UAAU;AAkCnB,eAAeA,UAAU;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}