{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vasja\\\\coding\\\\notes_pwa\\\\src\\\\components\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport Context from '../index';\nimport Nsearch from '../UI/Nsearch/Nsearch';\nimport Burger from '../UI/Burger/Burger';\nimport AddButton from '../UI/AddButton/AddButton';\nimport NoteViewer from './NoteViewer';\nimport Sidebar from './Sidebar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Header({\n  SearchSync,\n  search,\n  setSearch\n}) {\n  _s();\n  const {\n    store\n  } = useContext(Context);\n  const [noteIsEdit, setNoteIsEdit] = useState(false);\n  const [sidemenu, setSidemenu] = useState(false);\n  const callback = e => {\n    setNoteIsEdit(false);\n    store.AddNote(e);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(Burger, {\n        onClick: () => {\n          setSidemenu(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n        isActive: sidemenu,\n        setActive: setSidemenu,\n        onClick: () => {\n          setSidemenu(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Nsearch, {\n        isSync: SearchSync,\n        search: search,\n        setSearch: setSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddButton, {\n        onClick: () => {\n          setNoteIsEdit(true);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NoteViewer, {\n        note: {\n          title: \"\",\n          body: `<h3>Simple Snake Game</h3>\n<canvas id=\"stage\" height=\"400\" width=\"520\"></canvas>\n<script>\n    \n\n/**\n * Namespace\n */\nvar Game      = Game      || {};\nvar Keyboard  = Keyboard  || {}; \nvar Component = Component || {};\n\n/**\n * Keyboard Map\n */\nKeyboard.Keymap = {\n  37: 'left',\n  38: 'up',\n  39: 'right',\n  40: 'down'\n};\n\n/**\n * Keyboard Events\n */\nKeyboard.ControllerEvents = function() {\n  \n  // Setts\n  var self      = this;\n  this.pressKey = null;\n  this.keymap   = Keyboard.Keymap;\n  \n  // Keydown Event\n  document.onkeydown = function(event) {\n    self.pressKey = event.which;\n  };\n  \n  // Get Key\n  this.getKey = function() {\n    return this.keymap[this.pressKey];\n  };\n};\n\n/**\n * Game Component Stage\n */\nComponent.Stage = function(canvas, conf) {  \n  \n  // Sets\n  this.keyEvent  = new Keyboard.ControllerEvents();\n  this.width     = canvas.width;\n  this.height    = canvas.height;\n  this.length    = [];\n  this.food      = {};\n  this.score     = 0;\n  this.direction = 'right';\n  this.conf      = {\n    cw   : 10,\n    size : 5,\n    fps  : 1000\n  };\n  \n  // Merge Conf\n  if (typeof conf == 'object') {\n    for (var key in conf) {\n      if (conf.hasOwnProperty(key)) {\n        this.conf[key] = conf[key];\n      }\n    }\n  }\n  \n};\n\n/**\n * Game Component Snake\n */\nComponent.Snake = function(canvas, conf) {\n  \n  // Game Stage\n  this.stage = new Component.Stage(canvas, conf);\n  \n  // Init Snake\n  this.initSnake = function() {\n    \n    // Itaration in Snake Conf Size\n    for (var i = 0; i < this.stage.conf.size; i++) {\n      \n      // Add Snake Cells\n      this.stage.length.push({x: i, y:0});\n    }\n  };\n  \n  // Call init Snake\n  this.initSnake();\n  \n  // Init Food  \n  this.initFood = function() {\n    \n    // Add food on stage\n    this.stage.food = {\n      x: Math.round(Math.random() * (this.stage.width - this.stage.conf.cw) / this.stage.conf.cw), \n      y: Math.round(Math.random() * (this.stage.height - this.stage.conf.cw) / this.stage.conf.cw), \n    };\n  };\n  \n  // Init Food\n  this.initFood();\n  \n  // Restart Stage\n  this.restart = function() {\n    this.stage.length            = [];\n    this.stage.food              = {};\n    this.stage.score             = 0;\n    this.stage.direction         = 'right';\n    this.stage.keyEvent.pressKey = null;\n    this.initSnake();\n    this.initFood();\n  };\n};\n\n/**\n * Game Draw\n */\nGame.Draw = function(context, snake) {\n  \n  // Draw Stage\n  this.drawStage = function() {\n    \n    // Check Keypress And Set Stage direction\n    var keyPress = snake.stage.keyEvent.getKey(); \n    if (typeof(keyPress) != 'undefined') {\n      snake.stage.direction = keyPress;\n    }\n    \n    // Draw White Stage\n    context.fillStyle = \"white\";\n    context.fillRect(0, 0, snake.stage.width, snake.stage.height);\n    \n    // Snake Position\n    var nx = snake.stage.length[0].x;\n    var ny = snake.stage.length[0].y;\n    \n    // Add position by stage direction\n    switch (snake.stage.direction) {\n      case 'right':\n        nx++;\n        break;\n      case 'left':\n        nx--;\n        break;\n      case 'up':\n        ny--;\n        break;\n      case 'down':\n        ny++;\n        break;\n    }\n    \n    // Check Collision\n    if (this.collision(nx, ny) == true) {\n      snake.restart();\n      return;\n    }\n    \n    // Logic of Snake food\n    if (nx == snake.stage.food.x && ny == snake.stage.food.y) {\n      var tail = {x: nx, y: ny};\n      snake.stage.score++;\n      snake.initFood();\n    } else {\n      var tail = snake.stage.length.pop();\n      tail.x   = nx;\n      tail.y   = ny;  \n    }\n    snake.stage.length.unshift(tail);\n    \n    // Draw Snake\n    for (var i = 0; i < snake.stage.length.length; i++) {\n      var cell = snake.stage.length[i];\n      this.drawCell(cell.x, cell.y);\n    }\n    \n    // Draw Food\n    this.drawCell(snake.stage.food.x, snake.stage.food.y);\n    \n    // Draw Score\n    context.fillText('Score: ' + snake.stage.score, 5, (snake.stage.height - 5));\n  };\n  \n  // Draw Cell\n  this.drawCell = function(x, y) {\n    context.fillStyle = 'rgb(170, 170, 170)';\n    context.beginPath();\n    context.arc((x * snake.stage.conf.cw + 6), (y * snake.stage.conf.cw + 6), 4, 0, 2*Math.PI, false);    \n    context.fill();\n  };\n  \n  // Check Collision with walls\n  this.collision = function(nx, ny) {  \n    if (nx == -1 || nx == (snake.stage.width / snake.stage.conf.cw) || ny == -1 || ny == (snake.stage.height / snake.stage.conf.cw)) {\n      return true;\n    }\n    return false;    \n  }\n};\n\n\n/**\n * Game Snake\n */\nGame.Snake = function(elementId, conf) {\n  \n  // Sets\n  var canvas   = document.getElementById(elementId);\n  var context  = canvas.getContext(\"2d\");\n  var snake    = new Component.Snake(canvas, conf);\n  var gameDraw = new Game.Draw(context, snake);\n  \n  // Game Interval\n  setInterval(function() {gameDraw.drawStage();}, snake.stage.conf.fps);\n};\n\n\n/**\n * Window Load\n */\nwindow.onload = function() {\n  var snake = new Game.Snake('stage', {fps: 100, size: 4});\n};\n\n\n</script>\n`\n        },\n        isActive: noteIsEdit,\n        setActive: setNoteIsEdit,\n        callback: callback,\n        removeCallback: () => {\n          noteIsEdit(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(Header, \"zQovpH9CGU4RRRfGoiNTgWOSoUI=\");\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useContext","Context","Nsearch","Burger","AddButton","NoteViewer","Sidebar","jsxDEV","_jsxDEV","Header","SearchSync","search","setSearch","_s","store","noteIsEdit","setNoteIsEdit","sidemenu","setSidemenu","callback","e","AddNote","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","isActive","setActive","isSync","note","title","body","removeCallback","_c","$RefreshReg$"],"sources":["C:/Users/vasja/coding/notes_pwa/src/components/Header.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport Context from '../index';\r\nimport Nsearch from '../UI/Nsearch/Nsearch';\r\nimport Burger from '../UI/Burger/Burger';\r\nimport AddButton from '../UI/AddButton/AddButton';\r\nimport NoteViewer from './NoteViewer';\r\nimport Sidebar from './Sidebar';\r\nfunction Header({SearchSync, search, setSearch }) {\r\n    const {store} = useContext(Context);\r\n    const [noteIsEdit, setNoteIsEdit] = useState(false);\r\n    const [sidemenu, setSidemenu] = useState(false);\r\n    const callback = (e) => {\r\n        setNoteIsEdit(false);\r\n        store.AddNote(e);\r\n    }\r\n    return (\r\n        <div className='container'>\r\n            <div className=\"header\">\r\n                <Burger onClick={()=>{setSidemenu(true)}}></Burger>\r\n                <Sidebar isActive={sidemenu} setActive={setSidemenu} onClick={()=>{setSidemenu(false)}} ></Sidebar>\r\n                <Nsearch isSync={SearchSync} search={search} setSearch={setSearch}></Nsearch>\r\n                <AddButton onClick={() => { setNoteIsEdit(true); }}></AddButton>\r\n                <NoteViewer note={{title: \"\", body: `<h3>Simple Snake Game</h3>\r\n<canvas id=\"stage\" height=\"400\" width=\"520\"></canvas>\r\n<script>\r\n    \r\n\r\n/**\r\n * Namespace\r\n */\r\nvar Game      = Game      || {};\r\nvar Keyboard  = Keyboard  || {}; \r\nvar Component = Component || {};\r\n\r\n/**\r\n * Keyboard Map\r\n */\r\nKeyboard.Keymap = {\r\n  37: 'left',\r\n  38: 'up',\r\n  39: 'right',\r\n  40: 'down'\r\n};\r\n\r\n/**\r\n * Keyboard Events\r\n */\r\nKeyboard.ControllerEvents = function() {\r\n  \r\n  // Setts\r\n  var self      = this;\r\n  this.pressKey = null;\r\n  this.keymap   = Keyboard.Keymap;\r\n  \r\n  // Keydown Event\r\n  document.onkeydown = function(event) {\r\n    self.pressKey = event.which;\r\n  };\r\n  \r\n  // Get Key\r\n  this.getKey = function() {\r\n    return this.keymap[this.pressKey];\r\n  };\r\n};\r\n\r\n/**\r\n * Game Component Stage\r\n */\r\nComponent.Stage = function(canvas, conf) {  \r\n  \r\n  // Sets\r\n  this.keyEvent  = new Keyboard.ControllerEvents();\r\n  this.width     = canvas.width;\r\n  this.height    = canvas.height;\r\n  this.length    = [];\r\n  this.food      = {};\r\n  this.score     = 0;\r\n  this.direction = 'right';\r\n  this.conf      = {\r\n    cw   : 10,\r\n    size : 5,\r\n    fps  : 1000\r\n  };\r\n  \r\n  // Merge Conf\r\n  if (typeof conf == 'object') {\r\n    for (var key in conf) {\r\n      if (conf.hasOwnProperty(key)) {\r\n        this.conf[key] = conf[key];\r\n      }\r\n    }\r\n  }\r\n  \r\n};\r\n\r\n/**\r\n * Game Component Snake\r\n */\r\nComponent.Snake = function(canvas, conf) {\r\n  \r\n  // Game Stage\r\n  this.stage = new Component.Stage(canvas, conf);\r\n  \r\n  // Init Snake\r\n  this.initSnake = function() {\r\n    \r\n    // Itaration in Snake Conf Size\r\n    for (var i = 0; i < this.stage.conf.size; i++) {\r\n      \r\n      // Add Snake Cells\r\n      this.stage.length.push({x: i, y:0});\r\n    }\r\n  };\r\n  \r\n  // Call init Snake\r\n  this.initSnake();\r\n  \r\n  // Init Food  \r\n  this.initFood = function() {\r\n    \r\n    // Add food on stage\r\n    this.stage.food = {\r\n      x: Math.round(Math.random() * (this.stage.width - this.stage.conf.cw) / this.stage.conf.cw), \r\n      y: Math.round(Math.random() * (this.stage.height - this.stage.conf.cw) / this.stage.conf.cw), \r\n    };\r\n  };\r\n  \r\n  // Init Food\r\n  this.initFood();\r\n  \r\n  // Restart Stage\r\n  this.restart = function() {\r\n    this.stage.length            = [];\r\n    this.stage.food              = {};\r\n    this.stage.score             = 0;\r\n    this.stage.direction         = 'right';\r\n    this.stage.keyEvent.pressKey = null;\r\n    this.initSnake();\r\n    this.initFood();\r\n  };\r\n};\r\n\r\n/**\r\n * Game Draw\r\n */\r\nGame.Draw = function(context, snake) {\r\n  \r\n  // Draw Stage\r\n  this.drawStage = function() {\r\n    \r\n    // Check Keypress And Set Stage direction\r\n    var keyPress = snake.stage.keyEvent.getKey(); \r\n    if (typeof(keyPress) != 'undefined') {\r\n      snake.stage.direction = keyPress;\r\n    }\r\n    \r\n    // Draw White Stage\r\n    context.fillStyle = \"white\";\r\n    context.fillRect(0, 0, snake.stage.width, snake.stage.height);\r\n    \r\n    // Snake Position\r\n    var nx = snake.stage.length[0].x;\r\n    var ny = snake.stage.length[0].y;\r\n    \r\n    // Add position by stage direction\r\n    switch (snake.stage.direction) {\r\n      case 'right':\r\n        nx++;\r\n        break;\r\n      case 'left':\r\n        nx--;\r\n        break;\r\n      case 'up':\r\n        ny--;\r\n        break;\r\n      case 'down':\r\n        ny++;\r\n        break;\r\n    }\r\n    \r\n    // Check Collision\r\n    if (this.collision(nx, ny) == true) {\r\n      snake.restart();\r\n      return;\r\n    }\r\n    \r\n    // Logic of Snake food\r\n    if (nx == snake.stage.food.x && ny == snake.stage.food.y) {\r\n      var tail = {x: nx, y: ny};\r\n      snake.stage.score++;\r\n      snake.initFood();\r\n    } else {\r\n      var tail = snake.stage.length.pop();\r\n      tail.x   = nx;\r\n      tail.y   = ny;  \r\n    }\r\n    snake.stage.length.unshift(tail);\r\n    \r\n    // Draw Snake\r\n    for (var i = 0; i < snake.stage.length.length; i++) {\r\n      var cell = snake.stage.length[i];\r\n      this.drawCell(cell.x, cell.y);\r\n    }\r\n    \r\n    // Draw Food\r\n    this.drawCell(snake.stage.food.x, snake.stage.food.y);\r\n    \r\n    // Draw Score\r\n    context.fillText('Score: ' + snake.stage.score, 5, (snake.stage.height - 5));\r\n  };\r\n  \r\n  // Draw Cell\r\n  this.drawCell = function(x, y) {\r\n    context.fillStyle = 'rgb(170, 170, 170)';\r\n    context.beginPath();\r\n    context.arc((x * snake.stage.conf.cw + 6), (y * snake.stage.conf.cw + 6), 4, 0, 2*Math.PI, false);    \r\n    context.fill();\r\n  };\r\n  \r\n  // Check Collision with walls\r\n  this.collision = function(nx, ny) {  \r\n    if (nx == -1 || nx == (snake.stage.width / snake.stage.conf.cw) || ny == -1 || ny == (snake.stage.height / snake.stage.conf.cw)) {\r\n      return true;\r\n    }\r\n    return false;    \r\n  }\r\n};\r\n\r\n\r\n/**\r\n * Game Snake\r\n */\r\nGame.Snake = function(elementId, conf) {\r\n  \r\n  // Sets\r\n  var canvas   = document.getElementById(elementId);\r\n  var context  = canvas.getContext(\"2d\");\r\n  var snake    = new Component.Snake(canvas, conf);\r\n  var gameDraw = new Game.Draw(context, snake);\r\n  \r\n  // Game Interval\r\n  setInterval(function() {gameDraw.drawStage();}, snake.stage.conf.fps);\r\n};\r\n\r\n\r\n/**\r\n * Window Load\r\n */\r\nwindow.onload = function() {\r\n  var snake = new Game.Snake('stage', {fps: 100, size: 4});\r\n};\r\n\r\n\r\n</script>\r\n`}} isActive={noteIsEdit} setActive={setNoteIsEdit} callback={callback} removeCallback={()=>{noteIsEdit(false)}}></NoteViewer>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAOC,OAAO,MAAM,UAAU;AAC9B,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChC,SAASC,MAAMA,CAAC;EAACC,UAAU;EAAEC,MAAM;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC9C,MAAM;IAACC;EAAK,CAAC,GAAGd,UAAU,CAACC,OAAO,CAAC;EACnC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMoB,QAAQ,GAAIC,CAAC,IAAK;IACpBJ,aAAa,CAAC,KAAK,CAAC;IACpBF,KAAK,CAACO,OAAO,CAACD,CAAC,CAAC;EACpB,CAAC;EACD,oBACIZ,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBf,OAAA;MAAKc,SAAS,EAAC,QAAQ;MAAAC,QAAA,gBACnBf,OAAA,CAACL,MAAM;QAACqB,OAAO,EAAEA,CAAA,KAAI;UAACN,WAAW,CAAC,IAAI,CAAC;QAAA;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACnDpB,OAAA,CAACF,OAAO;QAACuB,QAAQ,EAAEZ,QAAS;QAACa,SAAS,EAAEZ,WAAY;QAACM,OAAO,EAAEA,CAAA,KAAI;UAACN,WAAW,CAAC,KAAK,CAAC;QAAA;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACnGpB,OAAA,CAACN,OAAO;QAAC6B,MAAM,EAAErB,UAAW;QAACC,MAAM,EAAEA,MAAO;QAACC,SAAS,EAAEA;MAAU;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eAC7EpB,OAAA,CAACJ,SAAS;QAACoB,OAAO,EAAEA,CAAA,KAAM;UAAER,aAAa,CAAC,IAAI,CAAC;QAAE;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC,eAChEpB,OAAA,CAACH,UAAU;QAAC2B,IAAI,EAAE;UAACC,KAAK,EAAE,EAAE;UAAEC,IAAI,EAAG;AACrd,UAAW;QAACe,SAAS,EAAEd,aAAc;QAACG,QAAQ,EAAEA,QAAS;QAACgB,cAAc,EAAEA,CAAA,KAAI;UAACpB,UAAU,CAAC,KAAK,CAAC;QAAA;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7G;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACf,EAAA,CA3PQJ,MAAM;AAAA2B,EAAA,GAAN3B,MAAM;AA6Pf,eAAeA,MAAM;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}