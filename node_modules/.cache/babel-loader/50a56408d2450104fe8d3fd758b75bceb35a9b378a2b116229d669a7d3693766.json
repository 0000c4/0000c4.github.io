{"ast":null,"code":"import React,{useState,useContext}from'react';import{observer}from'mobx-react-lite';import Context from'../index';import{emailValidation,passwordValidation,nameValidation,comparePasswords}from'../utils/validation';import styles from'./RegForm.module.css';import Ninput from'../UI/Ninput/Ninput';import SpanButton from'../UI/Buttons/SpanButton/SpanButton';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function RefForm(_ref){let{isActive,setActive}=_ref;const{store}=useContext(Context);const[userReg,setUserReg]=useState({name:\"\",email:\"\",password:\"\"});const[retryPassword,setRetryPassword]=useState('');const[error,setError]=useState({password:'password is empty',email:'email is empty',name:'name is empty'});const[regButton,setRegButton]=useState(false);let style=styles.LoginForm;if(isActive===true){style+=' '+styles.active;}const RegButtonFunc=async()=>{if(error.password!=\"\"||error.email!=\"\"||error.name!=\"\"){setRegButton(true);}else{const externalError=await store.registration(userReg.email,userReg.password,userReg.name);if(typeof externalError!=\"undefined\"){setRegButton(true);setError({...error,password:externalError.message});}else{setActive(false);}}};return/*#__PURE__*/_jsxs(\"div\",{className:style,children:[/*#__PURE__*/_jsx(Ninput,{placeholder:\"name\",value:userReg.name,onChange:e=>{setRegButton(false);setUserReg({...userReg,name:e.target.value});nameValidation(e.target.value,setError,error);}}),regButton&&/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:error.name}),/*#__PURE__*/_jsx(Ninput,{placeholder:\"email\",value:userReg.email,onChange:e=>{setRegButton(false);setUserReg({...userReg,email:e.target.value});emailValidation(e.target.value,setError,error);}}),regButton&&/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:error.email}),/*#__PURE__*/_jsx(Ninput,{type:\"password\",placeholder:\"password\",value:userReg.password,onChange:e=>{setRegButton(false);setUserReg({...userReg,password:e.target.value});passwordValidation(e.target.value,setError,error);}}),/*#__PURE__*/_jsx(Ninput,{type:\"password\",placeholder:\" retry password\",value:retryPassword,onChange:e=>{setRegButton(false);setRetryPassword(e.target.value);comparePasswords(e.target.value,userReg.password,setError,error);}}),regButton&&/*#__PURE__*/_jsx(\"div\",{style:{color:\"red\"},children:error.password}),/*#__PURE__*/_jsx(SpanButton,{onClick:()=>{RegButtonFunc();},children:\"Sign up\"})]});}export default observer(RefForm);","map":{"version":3,"names":["React","useState","useContext","observer","Context","emailValidation","passwordValidation","nameValidation","comparePasswords","styles","Ninput","SpanButton","jsx","_jsx","jsxs","_jsxs","RefForm","_ref","isActive","setActive","store","userReg","setUserReg","name","email","password","retryPassword","setRetryPassword","error","setError","regButton","setRegButton","style","LoginForm","active","RegButtonFunc","externalError","registration","message","className","children","placeholder","value","onChange","e","target","color","type","onClick"],"sources":["C:/Users/vasja/coding/notes_pwa/src/components/RegForm.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite'\r\nimport Context from '../index';\r\nimport { emailValidation, passwordValidation, nameValidation, comparePasswords } from '../utils/validation'\r\nimport styles from './RegForm.module.css'\r\nimport Ninput from '../UI/Ninput/Ninput';\r\nimport SpanButton from '../UI/Buttons/SpanButton/SpanButton';\r\nfunction RefForm({ isActive, setActive }) {\r\n    const { store } = useContext(Context);\r\n    const [userReg, setUserReg] = useState({ name: \"\", email: \"\", password: \"\" })\r\n    const [retryPassword, setRetryPassword] = useState('');\r\n    const [error, setError] = useState({ password: 'password is empty', email: 'email is empty', name: 'name is empty' });\r\n    const [regButton, setRegButton] = useState(false);\r\n    let style = styles.LoginForm;\r\n    if (isActive === true) { style += ' ' + styles.active; }\r\n    const RegButtonFunc = async () => {\r\n        if (error.password != \"\" || error.email != \"\" || error.name != \"\") {\r\n            setRegButton(true);\r\n        }\r\n        else {\r\n            const externalError = await store.registration(userReg.email, userReg.password,userReg.name);\r\n            if(typeof externalError != \"undefined\"){\r\n                setRegButton(true);\r\n                setError({ ...error, password: externalError.message })\r\n            }\r\n            else{setActive(false)}\r\n        }\r\n    }\r\n    return (\r\n        <div className={style}>\r\n            <Ninput placeholder=\"name\"\r\n                value={userReg.name}\r\n                onChange={(e) => {\r\n                    setRegButton(false);\r\n                    setUserReg({ ...userReg, name: e.target.value, });\r\n                    nameValidation(e.target.value, setError, error)\r\n                }}\r\n            ></Ninput>\r\n            {regButton && <div style={{ color: \"red\" }}>{error.name}</div>}\r\n            <Ninput placeholder=\"email\"\r\n                value={userReg.email}\r\n                onChange={(e) => {\r\n                    setRegButton(false);\r\n                    setUserReg({ ...userReg, email: e.target.value, });\r\n                    emailValidation(e.target.value, setError, error)\r\n                }}\r\n            ></Ninput>\r\n            {regButton && <div style={{ color: \"red\" }}>{error.email}</div>}\r\n            <Ninput type=\"password\" placeholder=\"password\"\r\n                value={userReg.password}\r\n                onChange={(e) => {\r\n                    setRegButton(false);\r\n                    setUserReg({ ...userReg, password: e.target.value, });\r\n                    passwordValidation(e.target.value, setError, error)\r\n                }}\r\n            ></Ninput>\r\n            <Ninput type=\"password\" placeholder=\" retry password\"\r\n                value={retryPassword}\r\n                onChange={(e) => {\r\n                    setRegButton(false);\r\n                    setRetryPassword(e.target.value);\r\n                    comparePasswords(e.target.value, userReg.password, setError, error)\r\n                }}\r\n            ></Ninput>\r\n            {regButton && <div style={{ color: \"red\" }}>{error.password}</div>}\r\n            <SpanButton onClick={() => { RegButtonFunc();}}>Sign up</SpanButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(RefForm);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}