{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vasja\\\\coding\\\\notes_pwa\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Context from './index';\nimport Header from './components/Header';\nimport NoteList from './components/NoteList';\nimport Loading from './UI/Loading/Loading';\nimport noteService from './services/note-service';\nimport { openDB } from 'idb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    store\n  } = useContext(Context);\n  const [search, setSearch] = useState('');\n  const [isSync, setIsSync] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    try {\n      if (localStorage.getItem('token')) {\n        store.checkAuth();\n      }\n      let openRequest = indexedDB.open(\"db\", 1);\n\n      // создаём хранилище объектов для books, если ешё не существует\n      openRequest.onupgradeneeded = function () {\n        let db = openRequest.result;\n        if (!db.objectStoreNames.contains('notes')) {\n          // если хранилище \"books\" не существует\n          db.createObjectStore('notes', {\n            keyPath: 'id'\n          }); // создаём хранилище\n        }\n      };\n      let transaction = db.transaction(\"notes\", \"readwrite\"); // (1)\n\n      // получить хранилище объектов для работы с ним\n      let books = transaction.objectStore(\"notes\"); // (2)\n\n      let book = {\n        id: 'js',\n        price: 10,\n        created: new Date()\n      };\n      let request = books.add(book); // (3)\n\n      request.onsuccess = function () {\n        // (4)\n        console.log(\"Книга добавлена в хранилище\", request.result);\n      };\n      request.onerror = function () {\n        console.log(\"Ошибка\", request.error);\n      };\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  useMemo(() => {\n    store.NoteSearch(search);\n  }, [search, store.notes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      SearchSync: isSync,\n      search: search,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"hX8pakZ4Ud27q5aqDCWUYOrkwsM=\");\n_c = App;\nexport default _c2 = observer(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useContext","observer","Context","Header","NoteList","Loading","noteService","openDB","jsxDEV","_jsxDEV","App","_s","store","search","setSearch","isSync","setIsSync","isLoading","setIsLoading","localStorage","getItem","checkAuth","openRequest","indexedDB","open","onupgradeneeded","db","result","objectStoreNames","contains","createObjectStore","keyPath","transaction","books","objectStore","book","id","price","created","Date","request","add","onsuccess","console","log","onerror","error","NoteSearch","notes","children","SearchSync","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","_c","_c2","$RefreshReg$"],"sources":["C:/Users/vasja/coding/notes_pwa/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Context from './index';\r\nimport Header from './components/Header';\r\nimport NoteList from './components/NoteList';\r\nimport Loading from './UI/Loading/Loading';\r\nimport noteService from './services/note-service';\r\nimport { openDB } from 'idb';\r\nfunction App() {\r\n    const { store } = useContext(Context)\r\n    const [search, setSearch] = useState('');\r\n    const [isSync, setIsSync] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    useEffect(() => {\r\n        try {\r\n            if (localStorage.getItem('token')) {\r\n                store.checkAuth();\r\n            }\r\n            let openRequest = indexedDB.open(\"db\", 1);\r\n\r\n            // создаём хранилище объектов для books, если ешё не существует\r\n            openRequest.onupgradeneeded = function () {\r\n                let db = openRequest.result;\r\n                if (!db.objectStoreNames.contains('notes')) { // если хранилище \"books\" не существует\r\n                    db.createObjectStore('notes', { keyPath: 'id' }); // создаём хранилище\r\n                }\r\n            };\r\n            let transaction = db.transaction(\"notes\", \"readwrite\"); // (1)\r\n\r\n            // получить хранилище объектов для работы с ним\r\n            let books = transaction.objectStore(\"notes\"); // (2)\r\n\r\n            let book = {\r\n                id: 'js',\r\n                price: 10,\r\n                created: new Date()\r\n            };\r\n\r\n            let request = books.add(book); // (3)\r\n\r\n            request.onsuccess = function () { // (4)\r\n                console.log(\"Книга добавлена в хранилище\", request.result);\r\n            };\r\n\r\n            request.onerror = function () {\r\n                console.log(\"Ошибка\", request.error);\r\n            };\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n        }\r\n    }, [])\r\n    useMemo(() => {\r\n        store.NoteSearch(search)\r\n    }, [search, store.notes])\r\n    return (\r\n        <div>\r\n            <Header SearchSync={isSync} search={search} setSearch={setSearch}></Header>\r\n            <NoteList></NoteList>\r\n            {isLoading &&\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}><Loading /></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(App);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}