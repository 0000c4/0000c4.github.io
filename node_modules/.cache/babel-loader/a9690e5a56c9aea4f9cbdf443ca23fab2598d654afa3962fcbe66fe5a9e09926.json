{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vasja\\\\coding\\\\notes_pwa\\\\src\\\\components\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect, useMemo } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Context from '../index';\nimport { emailValidation, passwordValidation } from '../utils/validation';\nimport styles from './LoginForm.module.css';\nimport Ninput from '../UI/Ninput/Ninput';\nimport SpanButton from '../UI/Buttons/SpanButton/SpanButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginForm({\n  isActive,\n  setActive,\n  setRegForm\n}) {\n  _s();\n  const {\n    store\n  } = useContext(Context);\n  const [userLogin, setUserLogin] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [error, setError] = useState({\n    password: 'password is empty',\n    email: 'email is empty'\n  });\n  const [loginButton, setLoginButton] = useState(false);\n  const [resetPassword, setResetPassword] = useState(true);\n  const [successEmail, setSuccessEmail] = useState(false);\n  let style = styles.LoginForm;\n  if (isActive === true) {\n    style += ' ' + styles.active;\n  }\n  const loginButtonFunc = async () => {\n    console.log(error);\n    console.log(error.password != \"\" || error.email != \"\");\n    if (error.password != \"\" || error.email != \"\") {\n      setLoginButton(true);\n    } else {\n      const externalError = await store.login(userLogin.email, userLogin.password);\n      if (typeof externalError != \"undefined\") {\n        setLoginButton(true);\n        setError({\n          ...error,\n          password: externalError.message\n        });\n      } else {\n        setActive(false);\n      }\n    }\n  };\n  const sendButtonFunc = async () => {\n    if (error.email != \"\") {\n      setLoginButton(true);\n    } else {\n      const externalError = await store.sendResetPasswordEmail(userLogin.email);\n      if (typeof externalError != \"undefined\") {\n        setLoginButton(true);\n        setError({\n          ...error,\n          email: externalError.message\n        });\n      } else {\n        setSuccessEmail(true);\n      }\n    }\n  };\n  return resetPassword ?\n  /*#__PURE__*/\n  //!\n  _jsxDEV(\"div\", {\n    className: style,\n    children: [/*#__PURE__*/_jsxDEV(Ninput, {\n      placeholder: \"email\",\n      value: userLogin.email,\n      onChange: e => {\n        setLoginButton(false);\n        setUserLogin({\n          ...userLogin,\n          email: e.target.value\n        });\n        emailValidation(e.target.value, setError, error);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), loginButton && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Ninput, {\n      placeholder: \"password\",\n      type: \"password\",\n      value: userLogin.password,\n      onChange: e => {\n        setLoginButton(false);\n        setUserLogin({\n          ...userLogin,\n          password: e.target.value\n        });\n        passwordValidation(e.target.value, setError, error);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this), loginButton && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.LoginForm__buttons,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.LoginForm__buttons_block,\n        children: [/*#__PURE__*/_jsxDEV(SpanButton, {\n          style: {\n            fontSize: \"14px\"\n          },\n          onClick: () => {\n            loginButtonFunc();\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), \"\\u2800or\\u2800\", /*#__PURE__*/_jsxDEV(\"a\", {\n          onClick: () => {\n            setRegForm(true);\n          },\n          className: styles.loginForm__link,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.loginForm__link,\n        onClick: () => {\n          setResetPassword(false);\n        },\n        children: \"Forgot password?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: style,\n    children: [/*#__PURE__*/_jsxDEV(Ninput, {\n      placeholder: \"email\",\n      value: userLogin.email,\n      onChange: e => {\n        setLoginButton(false);\n        setUserLogin({\n          ...userLogin,\n          email: e.target.value\n        });\n        emailValidation(e.target.value, setError, error);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this), loginButton && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"red\"\n      },\n      children: error.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"We will send a password reset link to your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SpanButton, {\n      style: {\n        marginTop: \"12px\"\n      },\n      onClick: () => {\n        sendButtonFunc();\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }, this), successEmail && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"rgb(238, 243, 249)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"reset password link was sent successfully\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(SpanButton, {\n        style: {\n          marginTop: \"12px\"\n        },\n        onClick: () => {\n          setResetPassword(true);\n          setActive(false);\n        },\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 13\n  }, this);\n}\n_s(LoginForm, \"BsJa9tuKHPVZQ/t5qixBm7pMEhk=\");\n_c = LoginForm;\nexport default _c2 = observer(LoginForm);\nvar _c, _c2;\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useContext","useEffect","useMemo","observer","Context","emailValidation","passwordValidation","styles","Ninput","SpanButton","jsxDEV","_jsxDEV","LoginForm","isActive","setActive","setRegForm","_s","store","userLogin","setUserLogin","email","password","error","setError","loginButton","setLoginButton","resetPassword","setResetPassword","successEmail","setSuccessEmail","style","active","loginButtonFunc","console","log","externalError","login","message","sendButtonFunc","sendResetPasswordEmail","className","children","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","color","type","LoginForm__buttons","LoginForm__buttons_block","fontSize","onClick","loginForm__link","marginTop","position","width","height","backgroundColor","display","flexDirection","alignItems","_c","_c2","$RefreshReg$"],"sources":["C:/Users/vasja/coding/notes_pwa/src/components/LoginForm.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect, useMemo } from 'react';\r\nimport { observer } from 'mobx-react-lite'\r\nimport Context from '../index';\r\nimport { emailValidation, passwordValidation } from '../utils/validation'\r\nimport styles from './LoginForm.module.css'\r\nimport Ninput from '../UI/Ninput/Ninput';\r\nimport SpanButton from '../UI/Buttons/SpanButton/SpanButton';\r\nfunction LoginForm({ isActive, setActive, setRegForm }) {\r\n\r\n    const { store } = useContext(Context);\r\n\r\n    const [userLogin, setUserLogin] = useState({ email: \"\", password: \"\" })\r\n    const [error, setError] = useState({ password: 'password is empty', email: 'email is empty' });\r\n    const [loginButton, setLoginButton] = useState(false);\r\n    const [resetPassword, setResetPassword] = useState(true);\r\n    const [successEmail, setSuccessEmail] = useState(false);\r\n    let style = styles.LoginForm;\r\n    if (isActive === true) { style += ' ' + styles.active; }\r\n\r\n    const loginButtonFunc = async () => {\r\n        console.log(error)\r\n        console.log(error.password != \"\" || error.email != \"\")\r\n        if (error.password != \"\" || error.email != \"\") {\r\n            setLoginButton(true);\r\n        }\r\n        else {\r\n            const externalError = await store.login(userLogin.email, userLogin.password);\r\n            if (typeof externalError != \"undefined\") {\r\n                setLoginButton(true);\r\n                setError({ ...error, password: externalError.message })\r\n            }\r\n            else { setActive(false) }\r\n        }\r\n    }\r\n\r\n    const sendButtonFunc = async () => {\r\n        if (error.email != \"\") {\r\n            setLoginButton(true);\r\n        }\r\n        else {\r\n            const externalError = await store.sendResetPasswordEmail(userLogin.email);\r\n            if (typeof externalError != \"undefined\") {\r\n                setLoginButton(true);\r\n                setError({ ...error, email: externalError.message })\r\n            }\r\n            else {\r\n                \r\n                \r\n                setSuccessEmail(true)\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        resetPassword ?//!\r\n            <div className={style}>\r\n                <Ninput placeholder=\"email\"\r\n                    value={userLogin.email}\r\n                    onChange={(e) => {\r\n                        setLoginButton(false);\r\n                        setUserLogin({ ...userLogin, email: e.target.value, });\r\n                        emailValidation(e.target.value, setError, error)\r\n                    }}\r\n                ></Ninput>\r\n                {loginButton && <div style={{ color: \"red\" }}>{error.email}</div>}\r\n                <Ninput placeholder=\"password\"\r\n                    type=\"password\"\r\n                    value={userLogin.password}\r\n                    onChange={(e) => {\r\n                        setLoginButton(false);\r\n                        setUserLogin({ ...userLogin, password: e.target.value })\r\n                        passwordValidation(e.target.value, setError, error)\r\n                    }}\r\n                ></Ninput>\r\n                {loginButton && <div style={{ color: \"red\" }}>{error.password}</div>}\r\n\r\n\r\n                <div className={styles.LoginForm__buttons}>\r\n                    <div className={styles.LoginForm__buttons_block}>\r\n                        <SpanButton style={{ fontSize: \"14px\" }} onClick={() => { loginButtonFunc() }}>Login</SpanButton>\r\n                        ⠀or⠀<a onClick={() => { setRegForm(true) }} className={styles.loginForm__link} >Sign up</a>\r\n                    </div>\r\n                    <span className={styles.loginForm__link} onClick={() => { setResetPassword(false) }}>Forgot password?</span>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className={style}>\r\n                <Ninput placeholder=\"email\"\r\n                    value={userLogin.email}\r\n                    onChange={(e) => {\r\n                        setLoginButton(false);\r\n                        setUserLogin({ ...userLogin, email: e.target.value, });\r\n                        emailValidation(e.target.value, setError, error)\r\n                    }}\r\n                ></Ninput>\r\n                {loginButton && <div style={{ color: \"red\" }}>{error.email}</div>}\r\n                <span>We will send a password reset link to your email</span>\r\n                <SpanButton style={{ marginTop: \"12px\" }} onClick={() => { sendButtonFunc() }}>Send</SpanButton>\r\n                {successEmail &&\r\n                    <div style={{ position: \"absolute\", width: \"100%\", height: \"100%\", backgroundColor: \"rgb(238, 243, 249)\", display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\r\n                        <span>reset password link was sent successfully</span>\r\n                        <SpanButton style={{ marginTop: \"12px\" }} onClick={() => { setResetPassword(true);setActive(false); }}>Confirm</SpanButton>\r\n                    </div>}\r\n            </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default observer(LoginForm);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}