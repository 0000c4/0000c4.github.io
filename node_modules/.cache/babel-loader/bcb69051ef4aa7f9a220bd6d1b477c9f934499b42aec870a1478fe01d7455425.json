{"ast":null,"code":"import React,{useState,useEffect,useMemo,useContext}from'react';import{observer}from'mobx-react-lite';import Context from'./index';import Header from'./components/Header';import NoteList from'./components/NoteList';import Loading from'./UI/Loading/Loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const{store}=useContext(Context);const[search,setSearch]=useState('');const[isSync,setIsSync]=useState();const[isLoading,setIsLoading]=useState(true);useEffect(()=>{try{if(localStorage.getItem('token')){store.checkAuth();}}catch(error){console.log(error);}finally{setIsLoading(false);}},[]);useMemo(()=>{store.NoteSearch(search);},[search,store.notes]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{SearchSync:isSync,search:search,setSearch:setSearch}),/*#__PURE__*/_jsx(NoteList,{}),isLoading&&/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',justifyContent:'center'},children:/*#__PURE__*/_jsx(Loading,{})})]});}export default observer(App);","map":{"version":3,"names":["React","useState","useEffect","useMemo","useContext","observer","Context","Header","NoteList","Loading","jsx","_jsx","jsxs","_jsxs","App","store","search","setSearch","isSync","setIsSync","isLoading","setIsLoading","localStorage","getItem","checkAuth","error","console","log","NoteSearch","notes","children","SearchSync","style","display","justifyContent"],"sources":["C:/Users/vasja/coding/notes_pwa/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect,useMemo, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Context from './index';\r\nimport Header from './components/Header';\r\nimport NoteList from './components/NoteList';\r\nimport Loading from './UI/Loading/Loading';\r\nfunction App() {\r\n    const {store} = useContext(Context)\r\n    const [search, setSearch] = useState('');\r\n    const [isSync, setIsSync] = useState();\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    useEffect(() => {\r\n        try {\r\n            if(localStorage.getItem('token')){\r\n                store.checkAuth();\r\n            }  \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n        }\r\n    }, [])\r\n    useMemo(() => {\r\n        store.NoteSearch(search)\r\n    }, [search, store.notes])\r\n    return (\r\n        <div>\r\n            <Header SearchSync={isSync} search={search} setSearch={setSearch}></Header>\r\n            <NoteList></NoteList>\r\n            {isLoading &&\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}><Loading /></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(App);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAACC,OAAO,CAAEC,UAAU,KAAQ,OAAO,CACtE,OAASC,QAAQ,KAAQ,iBAAiB,CAC1C,MAAO,CAAAC,OAAO,KAAM,SAAS,CAC7B,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,QAAQ,KAAM,uBAAuB,CAC5C,MAAO,CAAAC,OAAO,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAC3C,QAAS,CAAAC,GAAGA,CAAA,CAAG,CACX,KAAM,CAACC,KAAK,CAAC,CAAGX,UAAU,CAACE,OAAO,CAAC,CACnC,KAAM,CAACU,MAAM,CAAEC,SAAS,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACiB,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAAC,CAAC,CACtC,KAAM,CAACmB,SAAS,CAAEC,YAAY,CAAC,CAAGpB,QAAQ,CAAC,IAAI,CAAC,CAChDC,SAAS,CAAC,IAAM,CACZ,GAAI,CACA,GAAGoB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAC7BR,KAAK,CAACS,SAAS,CAAC,CAAC,CACrB,CACJ,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CACtB,CAAC,OACO,CACJJ,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAAE,EAAE,CAAC,CACNlB,OAAO,CAAC,IAAM,CACVY,KAAK,CAACa,UAAU,CAACZ,MAAM,CAAC,CAC5B,CAAC,CAAE,CAACA,MAAM,CAAED,KAAK,CAACc,KAAK,CAAC,CAAC,CACzB,mBACIhB,KAAA,QAAAiB,QAAA,eACInB,IAAA,CAACJ,MAAM,EAACwB,UAAU,CAAEb,MAAO,CAACF,MAAM,CAAEA,MAAO,CAACC,SAAS,CAAEA,SAAU,CAAS,CAAC,cAC3EN,IAAA,CAACH,QAAQ,GAAW,CAAC,CACpBY,SAAS,eACNT,IAAA,QAAKqB,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,QAAS,CAAE,CAAAJ,QAAA,cAACnB,IAAA,CAACF,OAAO,GAAE,CAAC,CAAK,CAAC,EAE/E,CAAC,CAEd,CAEA,cAAe,CAAAJ,QAAQ,CAACS,GAAG,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}