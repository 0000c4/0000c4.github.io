{"ast":null,"code":"export const passwordValidation = (password, setErrors, errors) => {\n  if (password.length === 0) {\n    setErrors({\n      ...errors,\n      password: 'password is empty'\n    });\n  } else if (password.length < 5) {\n    setErrors({\n      ...errors,\n      password: 'password must be longer than 5'\n    });\n  } else if (password.length > 32) {\n    setErrors({\n      ...errors,\n      password: 'password must be shorter than 32'\n    });\n  } else {\n    setErrors({\n      ...errors,\n      password: ''\n    });\n  }\n};\nexport function emailValidation(email, setErrors, errors) {\n  const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n  if (!re.test(String(email).toLowerCase())) {\n    setErrors({\n      ...errors,\n      email: 'invalid email'\n    });\n  } else {\n    setErrors({\n      ...errors,\n      email: ''\n    });\n  }\n  if (!email) {\n    setErrors({\n      ...errors,\n      email: 'email is empty'\n    });\n  }\n}\nexport function nameValidation(email, setErrors, errors) {\n  const re = /^[a-z0-9]+$/i;\n  if (!re.test(String(email).toLowerCase())) {\n    setErrors({\n      ...errors,\n      name: 'name can contains 0-9 and a-b symbols'\n    });\n  } else {\n    setErrors({\n      ...errors,\n      name: ''\n    });\n  }\n  if (!email) {\n    setErrors({\n      ...errors,\n      name: 'name is empty'\n    });\n  }\n}\nexport function comparePasswords(password, passwordRetry, setErrors, errors) {\n  if (password === passwordRetry) {\n    setErrors({\n      ...errors,\n      password: ''\n    });\n  } else {\n    setErrors({\n      ...errors,\n      password: 'passwords arent match'\n    });\n  }\n}","map":{"version":3,"names":["passwordValidation","password","setErrors","errors","length","emailValidation","email","re","test","String","toLowerCase","nameValidation","name","comparePasswords","passwordRetry"],"sources":["C:/Users/vasja/coding/notes_pwa/src/utils/validation.js"],"sourcesContent":["export const passwordValidation = (password,setErrors, errors) => {\r\n    if (password.length === 0) {\r\n        setErrors({ ...errors, password: 'password is empty' })\r\n    }\r\n    else if (password.length < 5) {\r\n        setErrors({ ...errors, password: 'password must be longer than 5' })\r\n    }\r\n    else if (password.length > 32) {\r\n        setErrors({ ...errors, password: 'password must be shorter than 32' })\r\n    }\r\n\r\n    else {\r\n        setErrors({ ...errors, password: '' })\r\n    }\r\n}\r\nexport function emailValidation(email,setErrors,errors) {\r\n    const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    if (!re.test(String(email).toLowerCase())) {\r\n        setErrors({ ...errors, email: 'invalid email' })\r\n    }\r\n\r\n    else {\r\n        setErrors({ ...errors, email: ''})\r\n    }\r\n    if (!email) {\r\n        setErrors({ ...errors, email: 'email is empty' })\r\n    }\r\n\r\n\r\n}\r\nexport function nameValidation(email,setErrors,errors) {\r\n    const re = /^[a-z0-9]+$/i;\r\n    if (!re.test(String(email).toLowerCase())) {\r\n        setErrors({ ...errors, name: 'name can contains 0-9 and a-b symbols' })\r\n    }\r\n\r\n    else {\r\n        setErrors({ ...errors, name: ''})\r\n    }\r\n    if (!email) {\r\n        setErrors({ ...errors, name: 'name is empty' })\r\n    }\r\n\r\n\r\n}\r\nexport function comparePasswords(password, passwordRetry,setErrors,errors){\r\n    if(password === passwordRetry){\r\n        setErrors({ ...errors, password: '' })\r\n    }\r\n\r\n    else{\r\n        setErrors({ ...errors, password: 'passwords arent match' })\r\n    }\r\n}\r\n"],"mappings":"AAAA,OAAO,MAAMA,kBAAkB,GAAGA,CAACC,QAAQ,EAACC,SAAS,EAAEC,MAAM,KAAK;EAC9D,IAAIF,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;IACvBF,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEF,QAAQ,EAAE;IAAoB,CAAC,CAAC;EAC3D,CAAC,MACI,IAAIA,QAAQ,CAACG,MAAM,GAAG,CAAC,EAAE;IAC1BF,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEF,QAAQ,EAAE;IAAiC,CAAC,CAAC;EACxE,CAAC,MACI,IAAIA,QAAQ,CAACG,MAAM,GAAG,EAAE,EAAE;IAC3BF,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEF,QAAQ,EAAE;IAAmC,CAAC,CAAC;EAC1E,CAAC,MAEI;IACDC,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEF,QAAQ,EAAE;IAAG,CAAC,CAAC;EAC1C;AACJ,CAAC;AACD,OAAO,SAASI,eAAeA,CAACC,KAAK,EAACJ,SAAS,EAACC,MAAM,EAAE;EACpD,MAAMI,EAAE,GAAG,sHAAsH;EACjI,IAAI,CAACA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACH,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE;IACvCR,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEG,KAAK,EAAE;IAAgB,CAAC,CAAC;EACpD,CAAC,MAEI;IACDJ,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEG,KAAK,EAAE;IAAE,CAAC,CAAC;EACtC;EACA,IAAI,CAACA,KAAK,EAAE;IACRJ,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEG,KAAK,EAAE;IAAiB,CAAC,CAAC;EACrD;AAGJ;AACA,OAAO,SAASK,cAAcA,CAACL,KAAK,EAACJ,SAAS,EAACC,MAAM,EAAE;EACnD,MAAMI,EAAE,GAAG,cAAc;EACzB,IAAI,CAACA,EAAE,CAACC,IAAI,CAACC,MAAM,CAACH,KAAK,CAAC,CAACI,WAAW,CAAC,CAAC,CAAC,EAAE;IACvCR,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAES,IAAI,EAAE;IAAwC,CAAC,CAAC;EAC3E,CAAC,MAEI;IACDV,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAES,IAAI,EAAE;IAAE,CAAC,CAAC;EACrC;EACA,IAAI,CAACN,KAAK,EAAE;IACRJ,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAES,IAAI,EAAE;IAAgB,CAAC,CAAC;EACnD;AAGJ;AACA,OAAO,SAASC,gBAAgBA,CAACZ,QAAQ,EAAEa,aAAa,EAACZ,SAAS,EAACC,MAAM,EAAC;EACtE,IAAGF,QAAQ,KAAKa,aAAa,EAAC;IAC1BZ,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEF,QAAQ,EAAE;IAAG,CAAC,CAAC;EAC1C,CAAC,MAEG;IACAC,SAAS,CAAC;MAAE,GAAGC,MAAM;MAAEF,QAAQ,EAAE;IAAwB,CAAC,CAAC;EAC/D;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}