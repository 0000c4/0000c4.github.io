{"ast":null,"code":"import{makeAutoObservable}from'mobx';import AuthService from'../services/auth-service';import noteService from'../services/note-service';export default class Store{constructor(){//auth data\nthis.user={};this.isAuth=false;//notes data\nthis.notes=[];this.searchedNotes=[];makeAutoObservable(this);}setAuth(auth){this.isAuth=auth;}setUser(user){this.user=user;}setNotes(notes){this.notes=notes;}setSearchedNotes(notes){this.searchedNotes=notes;}async login(email,password){try{const response=await AuthService.login(email,password);console.log(response);localStorage.setItem('token',response.accessToken);this.setAuth(true);this.setUser(response.user);this.getNotes();}catch(error){return error.response.data;}}async registration(email,password,name){try{const response=await AuthService.registration(email,password,name);console.log(response);localStorage.setItem('token',response.accessToken);this.setAuth(true);this.setUser(response.user);}catch(error){return error.response.data;}}async logout(){try{console.log('logout');await AuthService.logout();localStorage.removeItem('token');this.setAuth(false);this.setUser({});}catch(error){console.log(error);}}async checkAuth(){try{const response=await AuthService.checkAuth();localStorage.setItem('token',response.accessToken);this.setAuth(true);this.setUser(response.user);this.getNotes();}catch(error){}}async sendResetPasswordEmail(email){try{const response=await AuthService.sendResetPasswordEmail(email);console.log(response);}catch(error){return error.response.data;}}//notes\nasync getNotes(){const notes=await noteService.get();this.setNotes(notes);}async editNote(note,sync){try{//await service.noteChange(editedNote)\nawait noteService.edit(note);let newArray=[];for(let i in this.notes){if(this.notes[i]._id===note._id){newArray.push(note);}else{newArray.push(this.notes[i]);}}this.setNotes(newArray);}catch(error){console.log(error);}finally{}}async AddNote(note,sync){try{// setIsSync(true)\n// await service.noteChange(note)\nconst newNote=await noteService.add(note);this.setNotes([...this.notes,newNote]);}catch(error){console.log(error);}finally{//setIsSync(false)\n}}async RemoveNote(note,sync){try{await noteService.delete(note);const notes=this.notes.filter(e=>e._id!==note._id);this.setNotes(notes);}catch(error){}}NoteSearch(search){const notes=this.notes.filter(note=>note.title.toLowerCase().includes(search.toLowerCase())).concat(this.notes.filter(note=>note.body.toLowerCase().includes(search.toLowerCase())));this.setSearchedNotes(notes);}}","map":{"version":3,"names":["makeAutoObservable","AuthService","noteService","Store","constructor","user","isAuth","notes","searchedNotes","setAuth","auth","setUser","setNotes","setSearchedNotes","login","email","password","response","console","log","localStorage","setItem","accessToken","getNotes","error","data","registration","name","logout","removeItem","checkAuth","sendResetPasswordEmail","get","editNote","note","sync","edit","newArray","i","_id","push","AddNote","newNote","add","RemoveNote","delete","filter","e","NoteSearch","search","title","toLowerCase","includes","concat","body"],"sources":["C:/Users/vasja/coding/notes_pwa/src/store/Store.js"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\r\nimport AuthService from '../services/auth-service';\r\nimport noteService from '../services/note-service';\r\nexport default class Store {\r\n    //auth data\r\n    user = {};\r\n    isAuth = false;\r\n\r\n    //notes data\r\n    notes = [];\r\n    searchedNotes = [];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setAuth(auth) {\r\n        this.isAuth = auth;\r\n    }\r\n    setUser(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    setNotes(notes){\r\n        this.notes = notes;\r\n    }\r\n    setSearchedNotes(notes){\r\n        this.searchedNotes = notes;\r\n    }\r\n\r\n    async login(email, password) {\r\n        try {\r\n            const response = await AuthService.login(email, password);\r\n            console.log(response);\r\n            localStorage.setItem('token', response.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.user)\r\n            this.getNotes();\r\n            \r\n        } catch (error) {\r\n            return error.response.data;\r\n        }\r\n    }\r\n\r\n    async registration(email, password, name) {\r\n        try {\r\n            const response = await AuthService.registration(email, password, name);\r\n            console.log(response);\r\n            localStorage.setItem('token', response.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.user);\r\n        } catch (error) {\r\n            return error.response.data;\r\n        }\r\n    }\r\n    async logout() {\r\n        try {\r\n            console.log('logout')\r\n            await AuthService.logout();\r\n            localStorage.removeItem('token')\r\n            this.setAuth(false);\r\n            this.setUser({});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    async checkAuth() {\r\n        try {\r\n            const response = await AuthService.checkAuth();\r\n            localStorage.setItem('token', response.accessToken)\r\n            this.setAuth(true);\r\n            this.setUser(response.user)\r\n            this.getNotes();\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    async sendResetPasswordEmail(email) {\r\n        try {\r\n            const response = await AuthService.sendResetPasswordEmail(email);\r\n            console.log(response)\r\n        } catch (error) {\r\n            return error.response.data;\r\n        }\r\n    }\r\n\r\n    //notes\r\n    async getNotes() {\r\n        const notes = await noteService.get()\r\n        this.setNotes(notes);\r\n    }\r\n    async editNote(note, sync) {\r\n        try {\r\n            //await service.noteChange(editedNote)\r\n            await noteService.edit(note)\r\n            let newArray = [];\r\n            for (let i in this.notes) {\r\n                if (this.notes[i]._id === note._id) {\r\n                    newArray.push(note)\r\n                }\r\n                else {\r\n                    newArray.push(this.notes[i])\r\n                }\r\n            }\r\n            this.setNotes(newArray);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n        }\r\n\r\n\r\n    }\r\n    async AddNote(note, sync) {\r\n        try {\r\n            // setIsSync(true)\r\n            // await service.noteChange(note)\r\n            const newNote = await noteService.add(note)\r\n            this.setNotes([...this.notes,newNote])\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            //setIsSync(false)\r\n        }\r\n\r\n    }\r\n    async RemoveNote(note, sync) {\r\n        try {\r\n            await noteService.delete(note)\r\n            const notes = this.notes.filter(e => e._id !== note._id)\r\n            this.setNotes(notes)\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    NoteSearch(search){\r\n        const notes = this.notes.filter(note => note.title.toLowerCase().includes(search.toLowerCase()))\r\n        .concat(this.notes.filter(note => note.body.toLowerCase().includes(search.toLowerCase())))\r\n        this.setSearchedNotes(notes);\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}