{"ast":null,"code":"import { makeAutoObservable } from 'mobx';\nimport AuthService from '../services/auth-service';\nimport noteService from '../services/note-service';\nimport localdb from '../local_db/localdb';\nexport default class Store {\n  constructor() {\n    //auth data\n    this.user = {};\n    this.isAuth = false;\n    //notes data\n    this.notes = [];\n    this.searchedNotes = [];\n    makeAutoObservable(this);\n  }\n  setAuth(auth) {\n    this.isAuth = auth;\n  }\n  setUser(user) {\n    this.user = user;\n  }\n  setNotes(notes) {\n    this.notes = notes;\n  }\n  setSearchedNotes(notes) {\n    this.searchedNotes = notes;\n  }\n  async login(email, password) {\n    try {\n      const response = await AuthService.login(email, password);\n      console.log(response);\n      localStorage.setItem('token', response.accessToken);\n      this.setAuth(true);\n      this.setUser(response.user);\n      this.getNotes();\n    } catch (error) {\n      return error.response.data;\n    }\n  }\n  async registration(email, password, name) {\n    try {\n      const response = await AuthService.registration(email, password, name);\n      console.log(response);\n      localStorage.setItem('token', response.accessToken);\n      this.setAuth(true);\n      this.setUser(response.user);\n    } catch (error) {\n      return error.response.data;\n    }\n  }\n  async logout() {\n    try {\n      console.log('logout');\n      await AuthService.logout();\n      localStorage.removeItem('token');\n      this.setAuth(false);\n      this.setUser({});\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async checkAuth() {\n    try {\n      const response = await AuthService.checkAuth();\n      localStorage.setItem('token', response.accessToken);\n      this.setAuth(true);\n      this.setUser(response.user);\n      this.getNotes();\n    } catch (error) {}\n  }\n  async sendResetPasswordEmail(email) {\n    try {\n      const response = await AuthService.sendResetPasswordEmail(email);\n      console.log(response);\n    } catch (error) {\n      return error.response.data;\n    }\n  }\n\n  //notes\n  async getNotes() {\n    const notes = await noteService.get();\n    this.setNotes(notes);\n  }\n  async editNote(note, sync) {\n    try {\n      //await service.noteChange(editedNote)\n      await noteService.edit(note);\n      let newArray = [];\n      for (let i in this.notes) {\n        if (this.notes[i]._id === note._id) {\n          newArray.push(note);\n        } else {\n          newArray.push(this.notes[i]);\n        }\n      }\n      this.setNotes(newArray);\n    } catch (error) {\n      console.log(error);\n    } finally {}\n  }\n  async AddNote(note, sync) {\n    try {\n      // setIsSync(true)\n      const newNote = {\n        ...note,\n        status: 'new',\n        _id: new Date()\n      };\n      await localdb.add(newNote);\n      //const newNote = await noteService.add(note)\n\n      this.setNotes([...this.notes, newNote]);\n    } catch (error) {\n      console.log(error);\n    } finally {\n      //setIsSync(false)\n    }\n  }\n  async RemoveNote(note, sync) {\n    try {\n      await noteService.delete(note);\n      const notes = this.notes.filter(e => e._id !== note._id);\n      this.setNotes(notes);\n    } catch (error) {}\n  }\n  NoteSearch(search) {\n    const notes = this.notes.filter(note => note.title.toLowerCase().includes(search.toLowerCase())).concat(this.notes.filter(note => note.body.toLowerCase().includes(search.toLowerCase())));\n    this.setSearchedNotes(notes);\n  }\n}","map":{"version":3,"names":["makeAutoObservable","AuthService","noteService","localdb","Store","constructor","user","isAuth","notes","searchedNotes","setAuth","auth","setUser","setNotes","setSearchedNotes","login","email","password","response","console","log","localStorage","setItem","accessToken","getNotes","error","data","registration","name","logout","removeItem","checkAuth","sendResetPasswordEmail","get","editNote","note","sync","edit","newArray","i","_id","push","AddNote","newNote","status","Date","add","RemoveNote","delete","filter","e","NoteSearch","search","title","toLowerCase","includes","concat","body"],"sources":["C:/Users/vasja/coding/notes_pwa/src/store/Store.js"],"sourcesContent":["import { makeAutoObservable } from 'mobx';\r\nimport AuthService from '../services/auth-service';\r\nimport noteService from '../services/note-service';\r\nimport localdb from '../local_db/localdb';\r\nexport default class Store {\r\n    //auth data\r\n    user = {};\r\n    isAuth = false;\r\n\r\n    //notes data\r\n    notes = [];\r\n    searchedNotes = [];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setAuth(auth) {\r\n        this.isAuth = auth;\r\n    }\r\n    setUser(user) {\r\n        this.user = user;\r\n    }\r\n\r\n    setNotes(notes){\r\n        this.notes = notes;\r\n    }\r\n    setSearchedNotes(notes){\r\n        this.searchedNotes = notes;\r\n    }\r\n\r\n    async login(email, password) {\r\n        try {\r\n            const response = await AuthService.login(email, password);\r\n            console.log(response);\r\n            localStorage.setItem('token', response.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.user)\r\n            this.getNotes();\r\n            \r\n        } catch (error) {\r\n            return error.response.data;\r\n        }\r\n    }\r\n\r\n    async registration(email, password, name) {\r\n        try {\r\n            const response = await AuthService.registration(email, password, name);\r\n            console.log(response);\r\n            localStorage.setItem('token', response.accessToken);\r\n            this.setAuth(true);\r\n            this.setUser(response.user);\r\n        } catch (error) {\r\n            return error.response.data;\r\n        }\r\n    }\r\n    async logout() {\r\n        try {\r\n            console.log('logout')\r\n            await AuthService.logout();\r\n            localStorage.removeItem('token')\r\n            this.setAuth(false);\r\n            this.setUser({});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    async checkAuth() {\r\n        try {\r\n            const response = await AuthService.checkAuth();\r\n            localStorage.setItem('token', response.accessToken)\r\n            this.setAuth(true);\r\n            this.setUser(response.user)\r\n            this.getNotes();\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n\r\n    async sendResetPasswordEmail(email) {\r\n        try {\r\n            const response = await AuthService.sendResetPasswordEmail(email);\r\n            console.log(response)\r\n        } catch (error) {\r\n            return error.response.data;\r\n        }\r\n    }\r\n\r\n    //notes\r\n    async getNotes() {\r\n        const notes = await noteService.get()\r\n        this.setNotes(notes);\r\n    }\r\n    async editNote(note, sync) {\r\n        try {\r\n            //await service.noteChange(editedNote)\r\n            await noteService.edit(note)\r\n            let newArray = [];\r\n            for (let i in this.notes) {\r\n                if (this.notes[i]._id === note._id) {\r\n                    newArray.push(note)\r\n                }\r\n                else {\r\n                    newArray.push(this.notes[i])\r\n                }\r\n            }\r\n            this.setNotes(newArray);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n        }\r\n\r\n\r\n    }\r\n    async AddNote(note, sync) {\r\n        try {\r\n            // setIsSync(true)\r\n            const newNote = {...note, status: 'new', _id: new Date()}\r\n            await localdb.add(newNote)\r\n            //const newNote = await noteService.add(note)\r\n\r\n            this.setNotes([...this.notes,newNote])\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        finally {\r\n            //setIsSync(false)\r\n        }\r\n\r\n    }\r\n    async RemoveNote(note, sync) {\r\n        try {\r\n            await noteService.delete(note)\r\n            const notes = this.notes.filter(e => e._id !== note._id)\r\n            this.setNotes(notes)\r\n        } catch (error) {\r\n\r\n        }\r\n    }\r\n    NoteSearch(search){\r\n        const notes = this.notes.filter(note => note.title.toLowerCase().includes(search.toLowerCase()))\r\n        .concat(this.notes.filter(note => note.body.toLowerCase().includes(search.toLowerCase())))\r\n        this.setSearchedNotes(notes);\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}