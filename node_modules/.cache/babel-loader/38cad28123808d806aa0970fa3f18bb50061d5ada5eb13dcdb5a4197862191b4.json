{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vasja\\\\coding\\\\notes_pwa\\\\src\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useContext } from 'react';\nimport { observer } from 'mobx-react-lite';\nimport Context from './index';\nimport Header from './components/Header';\nimport NoteList from './components/NoteList';\nimport Loading from './UI/Loading/Loading';\nimport { openDB } from 'idb/with-async-ittr.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const {\n    store\n  } = useContext(Context);\n  const [search, setSearch] = useState('');\n  const [isSync, setIsSync] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(async () => {\n    try {\n      if (localStorage.getItem('token')) {\n        store.checkAuth();\n      }\n      const db = await openDB('notes', 1, {\n        upgrade(db) {\n          // Create a store of objects\n          const store = db.createObjectStore('notes', {\n            // The 'id' property of the object will be the key.\n            keyPath: 'id'\n          });\n        }\n      });\n      await db.add('notes', {\n        id: 1488,\n        title: 'test_db',\n        date: new Date('2019-01-01'),\n        body: 'test'\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  useMemo(() => {\n    store.NoteSearch(search);\n  }, [search, store.notes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      SearchSync: isSync,\n      search: search,\n      setSearch: setSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NoteList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 76\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"hX8pakZ4Ud27q5aqDCWUYOrkwsM=\");\n_c = App;\nexport default _c2 = observer(App);\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useContext","observer","Context","Header","NoteList","Loading","openDB","jsxDEV","_jsxDEV","App","_s","store","search","setSearch","isSync","setIsSync","isLoading","setIsLoading","localStorage","getItem","checkAuth","db","upgrade","createObjectStore","keyPath","add","id","title","date","Date","body","error","console","log","NoteSearch","notes","children","SearchSync","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","_c","_c2","$RefreshReg$"],"sources":["C:/Users/vasja/coding/notes_pwa/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport Context from './index';\r\nimport Header from './components/Header';\r\nimport NoteList from './components/NoteList';\r\nimport Loading from './UI/Loading/Loading';\r\nimport { openDB } from 'idb/with-async-ittr.js';\r\nfunction App() {\r\n    const { store } = useContext(Context)\r\n    const [search, setSearch] = useState('');\r\n    const [isSync, setIsSync] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    useEffect(async () => {\r\n        try {\r\n            if (localStorage.getItem('token')) {\r\n                store.checkAuth();\r\n            }\r\n            const db = await openDB('notes', 1, {\r\n                upgrade(db) {\r\n                    // Create a store of objects\r\n                    const store = db.createObjectStore('notes', {\r\n                        // The 'id' property of the object will be the key.\r\n                        keyPath: 'id',\r\n                    });\r\n\r\n                },\r\n            });\r\n            await db.add('notes', {\r\n                id: 1488,\r\n                title: 'test_db',\r\n                date: new Date('2019-01-01'),\r\n                body: 'test',\r\n              });\r\n\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n        finally {\r\n            setIsLoading(false)\r\n        }\r\n    }, [])\r\n    useMemo(() => {\r\n        store.NoteSearch(search)\r\n    }, [search, store.notes])\r\n    return (\r\n        <div>\r\n            <Header SearchSync={isSync} search={search} setSearch={setSearch}></Header>\r\n            <NoteList></NoteList>\r\n            {isLoading &&\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}><Loading /></div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(App);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}