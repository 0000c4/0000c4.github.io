{"ast":null,"code":"import $api from \"../http/index\";\nexport default class noteService {\n  static async add(note) {\n    try {\n      const res = await $api.post('/note', note);\n      return {\n        data: res.data,\n        status: res.status\n      };\n    } catch (error) {\n      return error;\n    }\n  }\n  static async edit(note) {\n    try {\n      const res = await $api.put('/note', note);\n      return {\n        data: res.data,\n        status: res.status\n      };\n    } catch (error) {\n      return error;\n    }\n  }\n  static async delete(note) {\n    try {\n      const res = await $api.delete('/note', {\n        params: {\n          id: note._id\n        }\n      });\n      return {\n        data: res.data,\n        status: res.status\n      };\n    } catch (error) {\n      return error;\n    }\n  }\n  static async get() {\n    try {\n      const res = await $api.get('/note');\n      return {\n        data: res.data,\n        status: res.status\n      };\n    } catch (error) {\n      return error;\n    }\n  }\n}","map":{"version":3,"names":["$api","noteService","add","note","res","post","data","status","error","edit","put","delete","params","id","_id","get"],"sources":["C:/Users/vasja/coding/notes_pwa/src/services/note-service.js"],"sourcesContent":["import $api from \"../http/index\";\r\nexport default class noteService {\r\n    static async add(note) {\r\n        try {\r\n            const res = await $api.post('/note', note)\r\n            return { data: res.data, status: res.status }\r\n\r\n        } catch (error) {\r\n            return error\r\n        }\r\n\r\n    }\r\n    static async edit(note) {\r\n        try {\r\n            const res = await $api.put('/note', note)\r\n            return { data: res.data, status: res.status }\r\n        } catch (error) {\r\n            return error\r\n        }\r\n    }\r\n    static async delete(note) {\r\n        try {\r\n            const res = await $api.delete('/note', { params: { id: note._id } })\r\n            return { data: res.data, status: res.status }\r\n        } catch (error) {\r\n            return error\r\n        }\r\n    }\r\n    static async get() {\r\n        try {\r\n            const res = await $api.get('/note')\r\n            return { data: res.data, status: res.status }\r\n        } catch (error) {\r\n            return error\r\n        }\r\n\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,IAAI,MAAM,eAAe;AAChC,eAAe,MAAMC,WAAW,CAAC;EAC7B,aAAaC,GAAGA,CAACC,IAAI,EAAE;IACnB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMJ,IAAI,CAACK,IAAI,CAAC,OAAO,EAAEF,IAAI,CAAC;MAC1C,OAAO;QAAEG,IAAI,EAAEF,GAAG,CAACE,IAAI;QAAEC,MAAM,EAAEH,GAAG,CAACG;MAAO,CAAC;IAEjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAOA,KAAK;IAChB;EAEJ;EACA,aAAaC,IAAIA,CAACN,IAAI,EAAE;IACpB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMJ,IAAI,CAACU,GAAG,CAAC,OAAO,EAAEP,IAAI,CAAC;MACzC,OAAO;QAAEG,IAAI,EAAEF,GAAG,CAACE,IAAI;QAAEC,MAAM,EAAEH,GAAG,CAACG;MAAO,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAOA,KAAK;IAChB;EACJ;EACA,aAAaG,MAAMA,CAACR,IAAI,EAAE;IACtB,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMJ,IAAI,CAACW,MAAM,CAAC,OAAO,EAAE;QAAEC,MAAM,EAAE;UAAEC,EAAE,EAAEV,IAAI,CAACW;QAAI;MAAE,CAAC,CAAC;MACpE,OAAO;QAAER,IAAI,EAAEF,GAAG,CAACE,IAAI;QAAEC,MAAM,EAAEH,GAAG,CAACG;MAAO,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAOA,KAAK;IAChB;EACJ;EACA,aAAaO,GAAGA,CAAA,EAAG;IACf,IAAI;MACA,MAAMX,GAAG,GAAG,MAAMJ,IAAI,CAACe,GAAG,CAAC,OAAO,CAAC;MACnC,OAAO;QAAET,IAAI,EAAEF,GAAG,CAACE,IAAI;QAAEC,MAAM,EAAEH,GAAG,CAACG;MAAO,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAOA,KAAK;IAChB;EAEJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}